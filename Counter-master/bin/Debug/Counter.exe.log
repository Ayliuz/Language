
--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402091 в функции node_print() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 294. Попытка прочесть данные по адресу 0x00000014. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FC2F0 (32-bit), Flags: Cmdre0, Thread: 0xB498 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402091 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (294):

    292:     assert(print_file);
    293: 
=>  294:     node_print(LEFT(node), print_file);
    295: 
    296:     if (!node)

# 1 0x004020A3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (294):

    292:     assert(print_file);
    293: 
=>  294:     node_print(LEFT(node), print_file);
    295: 
    296:     if (!node)

# 2 0x004020A3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (294):

    292:     assert(print_file);
    293: 
=>  294:     node_print(LEFT(node), print_file);
    295: 
    296:     if (!node)

# 3 0x004020A3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (294):

    292:     assert(print_file);
    293: 
=>  294:     node_print(LEFT(node), print_file);
    295: 
    296:     if (!node)

# 4 0x004020A3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (294):

    292:     assert(print_file);
    293: 
=>  294:     node_print(LEFT(node), print_file);
    295: 
    296:     if (!node)

# 5 0x00402058 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (285):

    283:     assert(tree && print_file);
    284: 
=>  285:     node_print(ROOT(tree), print_file);
    286: 
    287:     fclose(print_file);

# 6 0x0041B58F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (23):

     21:     printf("%i", get_G(&Counter, expression));
     22: 
=>   23:     tree_print(&Counter, "printCounter.txt");
     24:     tree_dump(dot, DUMPNAME, &Counter);
     25:     tree_Dtor(&Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec  8 2018 01:06:33, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 08 2018 01:06:37

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402091 в функции node_print() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 294. Попытка прочесть данные по адресу 0x00000014. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FC2F0 (32-bit), Flags: Cmdre0, Thread: 0xB498 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402091 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (294):

    292:     assert(print_file);
    293: 
=>  294:     node_print(LEFT(node), print_file);
    295: 
    296:     if (!node)

# 1 0x004020A3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (294):

    292:     assert(print_file);
    293: 
=>  294:     node_print(LEFT(node), print_file);
    295: 
    296:     if (!node)

# 2 0x004020A3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (294):

    292:     assert(print_file);
    293: 
=>  294:     node_print(LEFT(node), print_file);
    295: 
    296:     if (!node)

# 3 0x004020A3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (294):

    292:     assert(print_file);
    293: 
=>  294:     node_print(LEFT(node), print_file);
    295: 
    296:     if (!node)

# 4 0x004020A3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (294):

    292:     assert(print_file);
    293: 
=>  294:     node_print(LEFT(node), print_file);
    295: 
    296:     if (!node)

# 5 0x00402058 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (285):

    283:     assert(tree && print_file);
    284: 
=>  285:     node_print(ROOT(tree), print_file);
    286: 
    287:     fclose(print_file);

# 6 0x0041B58F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (23):

     21:     printf("%i", get_G(&Counter, expression));
     22: 
=>   23:     tree_print(&Counter, "printCounter.txt");
     24:     tree_dump(dot, DUMPNAME, &Counter);
     25:     tree_Dtor(&Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec  8 2018 01:06:33, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 08 2018 01:06:37

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x77112D4D в функции RtlGetCurrentServiceSessionId(). Попытка прочесть данные по адресу 0x00228C08. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FC2F0 (32-bit), Flags: Cmdre0, Thread: 0x6914 (Main), GetLastError(): 126 (Не найден указанный модуль). 

--------------------------------------------------
Стек вызовов:

# 0 0x77112D4D in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetCurrentServiceSessionId()
# 1 0x77112302 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()
# 2 0x765070B5 in C:\WINDOWS\System32\msvcrt.dll: free()
# 4 0x66283A18 in D:\TX\Windows\MgwHelp32.dll: EnumDirTree()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec  8 2018 01:07:53, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 08 2018 01:19:24

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x004020B1 в функции node_print() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 294. Попытка прочесть данные по адресу 0x00000014. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FC2F0 (32-bit), Flags: Cmdre0, Thread: 0xD484 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x004020B1 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (294):

    292:     assert(print_file);
    293: 
=>  294:     node_print(LEFT(node), print_file);
    295: 
    296:     if (!node)

# 1 0x004020C3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (294):

    292:     assert(print_file);
    293: 
=>  294:     node_print(LEFT(node), print_file);
    295: 
    296:     if (!node)

# 2 0x004020C3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (294):

    292:     assert(print_file);
    293: 
=>  294:     node_print(LEFT(node), print_file);
    295: 
    296:     if (!node)

# 3 0x004020C3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (294):

    292:     assert(print_file);
    293: 
=>  294:     node_print(LEFT(node), print_file);
    295: 
    296:     if (!node)

# 4 0x004020C3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (294):

    292:     assert(print_file);
    293: 
=>  294:     node_print(LEFT(node), print_file);
    295: 
    296:     if (!node)

# 5 0x004020C3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (294):

    292:     assert(print_file);
    293: 
=>  294:     node_print(LEFT(node), print_file);
    295: 
    296:     if (!node)

# 6 0x00402078 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (285):

    283:     assert(tree && print_file);
    284: 
=>  285:     node_print(ROOT(tree), print_file);
    286: 
    287:     fclose(print_file);

# 7 0x0041B768 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (23):

     21:     printf("%i", get_G(&Counter, expression));
     22: 
=>   23:     tree_print(&Counter, "printCounter.txt");
     24:     tree_dump(dot, DUMPNAME, &Counter);
     25:     tree_Dtor(&Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec  8 2018 12:20:05, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 08 2018 12:20:09

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x004020B1 в функции node_print() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 294. Попытка прочесть данные по адресу 0x00000014. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FC2F0 (32-bit), Flags: Cmdre0, Thread: 0xD484 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x004020B1 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (294):

    292:     assert(print_file);
    293: 
=>  294:     node_print(LEFT(node), print_file);
    295: 
    296:     if (!node)

# 1 0x004020C3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (294):

    292:     assert(print_file);
    293: 
=>  294:     node_print(LEFT(node), print_file);
    295: 
    296:     if (!node)

# 2 0x004020C3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (294):

    292:     assert(print_file);
    293: 
=>  294:     node_print(LEFT(node), print_file);
    295: 
    296:     if (!node)

# 3 0x004020C3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (294):

    292:     assert(print_file);
    293: 
=>  294:     node_print(LEFT(node), print_file);
    295: 
    296:     if (!node)

# 4 0x004020C3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (294):

    292:     assert(print_file);
    293: 
=>  294:     node_print(LEFT(node), print_file);
    295: 
    296:     if (!node)

# 5 0x004020C3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (294):

    292:     assert(print_file);
    293: 
=>  294:     node_print(LEFT(node), print_file);
    295: 
    296:     if (!node)

# 6 0x00402078 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (285):

    283:     assert(tree && print_file);
    284: 
=>  285:     node_print(ROOT(tree), print_file);
    286: 
    287:     fclose(print_file);

# 7 0x0041B768 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (23):

     21:     printf("%i", get_G(&Counter, expression));
     22: 
=>   23:     tree_print(&Counter, "printCounter.txt");
     24:     tree_dump(dot, DUMPNAME, &Counter);
     25:     tree_Dtor(&Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec  8 2018 12:20:05, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 08 2018 12:20:08

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x765524A9 в функции $I10_OUTPUT(). Попытка записать данные по адресу NULL. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FC2F0 (32-bit), Flags: Cmdre0, Thread: 0xC834 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x765524A9 in C:\WINDOWS\System32\msvcrt.dll: $I10_OUTPUT()
# 1 0x7653F950 in C:\WINDOWS\System32\msvcrt.dll: ungetwc()
# 2 0x76534C57 in C:\WINDOWS\System32\msvcrt.dll: scanf()
# 3 0x76534BF8 in C:\WINDOWS\System32\msvcrt.dll: scanf()

# 4 0x00402619 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_node() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (441):

    439:             if(isdigit(c))
    440:             {
=>  441:                 scanf("%lf", info);
    442:                 type = CONST_T;
    443:             }

# 5 0x0040235B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (371):

    369:         CALL_ERROR;
    370: 
=>  371:         Node* new_node = get_node(read_file, error);
    372:         if (!new_node)
    373:             return NULL;

# 6 0x00402333 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (368):

    366:     if (C_READ == '(')
    367:     {
=>  368:         Node* new_left = node_read(read_file, tree, error);
    369:         CALL_ERROR;
    370: 

# 7 0x00402221 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (331):

    329:     int error = 0;
    330: 
=>  331:     tree_set_root(tree, node_read(readtxt, tree, &error));
    332: 
    333:     if (error)

# 8 0x0041B749 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (20):

     18:     //printf("%i", get_G(&Counter, expression));
     19: 
=>   20:     Tree* Counter = tree_read(WRITENAME); //get_G(expression);
     21: 
     22:     //tree_print(Counter, WRITENAME);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec  9 2018 00:49:30, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 09 2018 00:49:49

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x765524A9 в функции $I10_OUTPUT(). Попытка записать данные по адресу NULL. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FC2F0 (32-bit), Flags: Cmdre0, Thread: 0xC834 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x765524A9 in C:\WINDOWS\System32\msvcrt.dll: $I10_OUTPUT()
# 1 0x7653F950 in C:\WINDOWS\System32\msvcrt.dll: ungetwc()
# 2 0x76534C57 in C:\WINDOWS\System32\msvcrt.dll: scanf()
# 3 0x76534BF8 in C:\WINDOWS\System32\msvcrt.dll: scanf()

# 4 0x00402619 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_node() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (441):

    439:             if(isdigit(c))
    440:             {
=>  441:                 scanf("%lf", info);
    442:                 type = CONST_T;
    443:             }

# 5 0x0040235B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (371):

    369:         CALL_ERROR;
    370: 
=>  371:         Node* new_node = get_node(read_file, error);
    372:         if (!new_node)
    373:             return NULL;

# 6 0x00402333 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (368):

    366:     if (C_READ == '(')
    367:     {
=>  368:         Node* new_left = node_read(read_file, tree, error);
    369:         CALL_ERROR;
    370: 

# 7 0x00402221 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (331):

    329:     int error = 0;
    330: 
=>  331:     tree_set_root(tree, node_read(readtxt, tree, &error));
    332: 
    333:     if (error)

# 8 0x0041B749 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (20):

     18:     //printf("%i", get_G(&Counter, expression));
     19: 
=>   20:     Tree* Counter = tree_read(WRITENAME); //get_G(expression);
     21: 
     22:     //tree_print(Counter, WRITENAME);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec  9 2018 00:49:30, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 09 2018 00:49:49

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x765524A9 в функции $I10_OUTPUT(). Попытка записать данные по адресу NULL. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FC2F0 (32-bit), Flags: Cmdre0, Thread: 0x8FC8 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x765524A9 in C:\WINDOWS\System32\msvcrt.dll: $I10_OUTPUT()
# 1 0x7653F950 in C:\WINDOWS\System32\msvcrt.dll: ungetwc()
# 2 0x765338C0 in C:\WINDOWS\System32\msvcrt.dll: fscanf_s()
# 3 0x7653379B in C:\WINDOWS\System32\msvcrt.dll: fscanf()

# 4 0x00402620 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_node() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (441):

    439:             if(isdigit(c))
    440:             {
=>  441:                 fscanf(read_file, "%lf", info);
    442:                 type = CONST_T;
    443:             }

# 5 0x0040235B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (371):

    369:         CALL_ERROR;
    370: 
=>  371:         Node* new_node = get_node(read_file, error);
    372:         if (!new_node)
    373:             return NULL;

# 6 0x00402333 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (368):

    366:     if (C_READ == '(')
    367:     {
=>  368:         Node* new_left = node_read(read_file, tree, error);
    369:         CALL_ERROR;
    370: 

# 7 0x00402221 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (331):

    329:     int error = 0;
    330: 
=>  331:     tree_set_root(tree, node_read(readtxt, tree, &error));
    332: 
    333:     if (error)

# 8 0x0041B651 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (20):

     18:     //printf("%i", get_G(&Counter, expression));
     19: 
=>   20:     Tree* Counter = tree_read(WRITENAME); //get_G(expression);
     21: 
     22:     //tree_print(Counter, WRITENAME);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec  9 2018 00:51:05, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 09 2018 00:51:08

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x765524A9 в функции $I10_OUTPUT(). Попытка записать данные по адресу NULL. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FC2F0 (32-bit), Flags: Cmdre0, Thread: 0x8FC8 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x765524A9 in C:\WINDOWS\System32\msvcrt.dll: $I10_OUTPUT()
# 1 0x7653F950 in C:\WINDOWS\System32\msvcrt.dll: ungetwc()
# 2 0x765338C0 in C:\WINDOWS\System32\msvcrt.dll: fscanf_s()
# 3 0x7653379B in C:\WINDOWS\System32\msvcrt.dll: fscanf()

# 4 0x00402620 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_node() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (441):

    439:             if(isdigit(c))
    440:             {
=>  441:                 fscanf(read_file, "%lf", info);
    442:                 type = CONST_T;
    443:             }

# 5 0x0040235B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (371):

    369:         CALL_ERROR;
    370: 
=>  371:         Node* new_node = get_node(read_file, error);
    372:         if (!new_node)
    373:             return NULL;

# 6 0x00402333 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (368):

    366:     if (C_READ == '(')
    367:     {
=>  368:         Node* new_left = node_read(read_file, tree, error);
    369:         CALL_ERROR;
    370: 

# 7 0x00402221 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (331):

    329:     int error = 0;
    330: 
=>  331:     tree_set_root(tree, node_read(readtxt, tree, &error));
    332: 
    333:     if (error)

# 8 0x0041B651 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (20):

     18:     //printf("%i", get_G(&Counter, expression));
     19: 
=>   20:     Tree* Counter = tree_read(WRITENAME); //get_G(expression);
     21: 
     22:     //tree_print(Counter, WRITENAME);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec  9 2018 00:51:05, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 09 2018 00:51:09

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (22, 0x00): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FC2F0 (32-bit), Flags: Cmdre0, Thread: 0x79DC (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040AF4F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: _txOnSignal() at D:/TX/TXlib.h (8817)
# 1 0x76516F61 in C:\WINDOWS\System32\msvcrt.dll: raise()
# 2 0x7651B40B in C:\WINDOWS\System32\msvcrt.dll: abort()
# 3 0x76517D8C in C:\WINDOWS\System32\msvcrt.dll: assert()

# 4 0x004021D7 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (284):

    282:     FILE* print_file = fopen(WRITENAME, "w");
    283: 
=>  284:     assert(tree && print_file);
    285: 
    286:     node_print(ROOT(tree), print_file);

# 5 0x0041B7EB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (20):

     18: 
     19:     Tree* Counter = get_G(expression);
=>   20:     tree_print(Counter, WRITENAME);
     21: 
     22:     printf("%lg\n", AST_count(Counter));

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec  9 2018 01:35:01, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 09 2018 01:35:05

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x77112D4D в функции RtlGetCurrentServiceSessionId(). Попытка прочесть данные по адресу 0x011775C8. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FC2F0 (32-bit), Flags: Cmdre0, Thread: 0x410C (Main), GetLastError(): 126 (Не найден указанный модуль). 

--------------------------------------------------
Стек вызовов:

# 0 0x77112D4D in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetCurrentServiceSessionId()
# 1 0x77112302 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()
# 2 0x765070B5 in C:\WINDOWS\System32\msvcrt.dll: free()
# 4 0x66283A18 in D:\TX\Windows\MgwHelp32.dll: EnumDirTree()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec  9 2018 01:35:01, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 09 2018 02:34:37

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (22, 0x00): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FC2F0 (32-bit), Flags: Cmdre0, Thread: 0x38C0 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040AF4F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: _txOnSignal() at D:/TX/TXlib.h (8817)
# 1 0x76516F61 in C:\WINDOWS\System32\msvcrt.dll: raise()
# 2 0x7651B40B in C:\WINDOWS\System32\msvcrt.dll: abort()
# 3 0x76517D8C in C:\WINDOWS\System32\msvcrt.dll: assert()

# 4 0x004017DA in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_operate_create() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (102):

    100: Node* tree_operate_create(Tree* AST, tree_type oper, Node* value1, Node* value2)
    101: {
=>  102:     assert(AST && value1 && value2);
    103: 
    104:     Node* new_branch = node_create(OP, oper);

# 5 0x004014F6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_E() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (39):

     37:         S++;
     38:         Node* summand = get_T(AST);
=>   39:         result = OPER_CREATE(op, summand);
     40:     }
     41:     SynAssert(E, S != old_s);

# 6 0x0040139D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_G() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (14):

     12:     CountError = 0;
     13: 
=>   14:     Node* result = get_E(AST);
     15:     if(CountError) return NULL;
     16: 

# 7 0x0041B7CC in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (19):

     17:     scanf("%s", expression);
     18: 
=>   19:     Tree* Counter = get_G(expression);
     20:     tree_print(Counter, WRITENAME);
     21: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec  9 2018 01:35:01, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 09 2018 13:14:49

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x7653B0D2 в функции ungetwc(). Попытка прочесть данные по адресу 0x0000006D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0xD700 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x7653B0D2 in C:\WINDOWS\System32\msvcrt.dll: ungetwc()
# 1 0x765348DB in C:\WINDOWS\System32\msvcrt.dll: printf()

# 2 0x0041B8AA in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (26):

     24:     double c = (double) (int) b;
     25: 
=>   26:     printf("%p\n%s\n", b, *(char*) (int) (double) (int) b);
     27:     //tree_dump(dot, DUMPNAME, Counter);
     28: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec  9 2018 15:03:02, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 09 2018 15:03:05

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x7653B0D2 в функции ungetwc(). Попытка прочесть данные по адресу 0x0000006D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0xD700 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x7653B0D2 in C:\WINDOWS\System32\msvcrt.dll: ungetwc()
# 1 0x765348DB in C:\WINDOWS\System32\msvcrt.dll: printf()

# 2 0x0041B8AA in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (26):

     24:     double c = (double) (int) b;
     25: 
=>   26:     printf("%p\n%s\n", b, *(char*) (int) (double) (int) b);
     27:     //tree_dump(dot, DUMPNAME, Counter);
     28: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec  9 2018 15:03:02, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 09 2018 15:03:05

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x7653B0D2 в функции ungetwc(). Попытка прочесть данные по адресу 0x0000006D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x6D7C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x7653B0D2 in C:\WINDOWS\System32\msvcrt.dll: ungetwc()
# 1 0x765348DB in C:\WINDOWS\System32\msvcrt.dll: printf()

# 2 0x0041B8AA in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (26):

     24:     double c = (double) (int) b;
     25: 
=>   26:     printf("%p\n%s\n", b, *((char*) (int) (double) (int) b));
     27:     //tree_dump(dot, DUMPNAME, Counter);
     28: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec  9 2018 15:03:18, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 09 2018 15:03:21

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x7653B0D2 в функции ungetwc(). Попытка прочесть данные по адресу 0x0000006D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x6D7C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x7653B0D2 in C:\WINDOWS\System32\msvcrt.dll: ungetwc()
# 1 0x765348DB in C:\WINDOWS\System32\msvcrt.dll: printf()

# 2 0x0041B8AA in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (26):

     24:     double c = (double) (int) b;
     25: 
=>   26:     printf("%p\n%s\n", b, *((char*) (int) (double) (int) b));
     27:     //tree_dump(dot, DUMPNAME, Counter);
     28: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec  9 2018 15:03:18, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 09 2018 15:03:21

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x77112D4D в функции RtlGetCurrentServiceSessionId(). Попытка прочесть данные по адресу 0x011CA308. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x1534 (Main), GetLastError(): 126 (Не найден указанный модуль). 

--------------------------------------------------
Стек вызовов:

# 0 0x77112D4D in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetCurrentServiceSessionId()
# 1 0x77112302 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()
# 2 0x765070B5 in C:\WINDOWS\System32\msvcrt.dll: free()
# 4 0x66283A18 in D:\TX\Windows\MgwHelp32.dll: EnumDirTree()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec  9 2018 18:56:10, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 09 2018 18:56:13

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (22, 0x00): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0xDE84 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040B3DF in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: _txOnSignal() at D:/TX/TXlib.h (8817)
# 1 0x76516F61 in C:\WINDOWS\System32\msvcrt.dll: raise()
# 2 0x7651B40B in C:\WINDOWS\System32\msvcrt.dll: abort()
# 3 0x76517D8C in C:\WINDOWS\System32\msvcrt.dll: assert()

# 4 0x00401B01 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_operate_create() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (171):

    169: Node* tree_operate_create(Tree* AST, tree_type oper, Node* value1, Node* value2)
    170: {
=>  171:     assert(AST && value1 && value2);
    172: 
    173:     Node* new_branch = node_create(OP, oper);

# 5 0x00401621 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_T() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (62):

     60:         S++;
     61:         Node* mul = get_P(AST);
=>   62:         result = OPER_CREATE(op, mul);
     63:     }
     64:     SynAssert(T, S != old_s);

# 6 0x004014F5 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_E() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (40):

     38:         int op = *S;
     39:         S++;
=>   40:         Node* summand = get_T(AST);
     41:         result = OPER_CREATE(op, summand);
     42:     }

# 7 0x0040139D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_G() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (14):

     12:     CountError = 0;
     13: 
=>   14:     Node* result = get_E(AST);
     15:     if(CountError) return NULL;
     16: 

# 8 0x0041BC90 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (19):

     17:     //scanf("%s", expression);
     18: 
=>   19:     Tree* Counter = get_G(expression);
     20:     //tree_print(Counter, WRITENAME);
     21: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec  9 2018 19:09:09, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 09 2018 19:09:13

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x77112D4D в функции RtlGetCurrentServiceSessionId(). Попытка прочесть данные по адресу 0x00234C50. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0xB614 (Main), GetLastError(): 126 (Не найден указанный модуль). 

--------------------------------------------------
Стек вызовов:

# 0 0x77112D4D in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetCurrentServiceSessionId()
# 1 0x77112302 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()
# 2 0x765070B5 in C:\WINDOWS\System32\msvcrt.dll: free()
# 4 0x66283A18 in D:\TX\Windows\MgwHelp32.dll: EnumDirTree()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec  9 2018 19:09:09, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 09 2018 19:17:01

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (22, 0x00): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x1E94 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040B473 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: _txOnSignal() at D:/TX/TXlib.h (8817)
# 1 0x76516F61 in C:\WINDOWS\System32\msvcrt.dll: raise()
# 2 0x7651B40B in C:\WINDOWS\System32\msvcrt.dll: abort()
# 3 0x76517D8C in C:\WINDOWS\System32\msvcrt.dll: assert()

# 4 0x00402686 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (303):

    301:     FILE* print_file = fopen(WRITENAME, "w");
    302: 
=>  303:     assert(tree && print_file);
    304: 
    305:     node_print(tree, ROOT(tree), print_file);

# 5 0x0041BD4B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (20):

     18: 
     19:     Tree* Counter = get_G(expression);
=>   20:     tree_print(Counter, WRITENAME);
     21: 
     22:     tree_dump(dot, DUMPNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec  9 2018 19:24:46, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 09 2018 19:24:49

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (22, 0x00): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x976C (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040B473 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: _txOnSignal() at D:/TX/TXlib.h (8817)
# 1 0x76516F61 in C:\WINDOWS\System32\msvcrt.dll: raise()
# 2 0x7651B40B in C:\WINDOWS\System32\msvcrt.dll: abort()
# 3 0x76517D8C in C:\WINDOWS\System32\msvcrt.dll: assert()

# 4 0x00402686 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (303):

    301:     FILE* print_file = fopen(WRITENAME, "w");
    302: 
=>  303:     assert(tree && print_file);
    304: 
    305:     node_print(tree, ROOT(tree), print_file);

# 5 0x0041BD4B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (20):

     18: 
     19:     Tree* Counter = get_G(expression);
=>   20:     tree_print(Counter, WRITENAME);
     21: 
     22:     tree_dump(dot, DUMPNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec  9 2018 19:26:01, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 09 2018 19:26:04

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (22, 0x00): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0xD374 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040B5B3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: _txOnSignal() at D:/TX/TXlib.h (8817)
# 1 0x76516F61 in C:\WINDOWS\System32\msvcrt.dll: raise()
# 2 0x7651B40B in C:\WINDOWS\System32\msvcrt.dll: abort()
# 3 0x76517D8C in C:\WINDOWS\System32\msvcrt.dll: assert()

# 4 0x004027EA in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (303):

    301:     FILE* print_file = fopen(WRITENAME, "w");
    302: 
=>  303:     assert(tree && print_file);
    304: 
    305:     node_print(tree, ROOT(tree), print_file);

# 5 0x0041BE93 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (20):

     18: 
     19:     Tree* Counter = get_G(expression);
=>   20:     tree_print(Counter, WRITENAME);
     21: 
     22:     tree_dump(dot, DUMPNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 10 2018 01:44:42, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 10 2018 01:44:46

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (22, 0x00): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x5A0 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040B5B3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: _txOnSignal() at D:/TX/TXlib.h (8817)
# 1 0x76516F61 in C:\WINDOWS\System32\msvcrt.dll: raise()
# 2 0x7651B40B in C:\WINDOWS\System32\msvcrt.dll: abort()
# 3 0x76517D8C in C:\WINDOWS\System32\msvcrt.dll: assert()

# 4 0x004027EA in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_print() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (303):

    301:     FILE* print_file = fopen(WRITENAME, "w");
    302: 
=>  303:     assert(tree && print_file);
    304: 
    305:     node_print(tree, ROOT(tree), print_file);

# 5 0x0041BE93 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (20):

     18: 
     19:     Tree* Counter = get_G(expression);
=>   20:     tree_print(Counter, WRITENAME);
     21: 
     22:     tree_dump(dot, DUMPNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 10 2018 01:44:42, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 10 2018 01:45:52

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (22, 0x00): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x405C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040B5B3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: _txOnSignal() at D:/TX/TXlib.h (8817)
# 1 0x76516F61 in C:\WINDOWS\System32\msvcrt.dll: raise()
# 2 0x7651B40B in C:\WINDOWS\System32\msvcrt.dll: abort()
# 3 0x76517D8C in C:\WINDOWS\System32\msvcrt.dll: assert()

# 4 0x00402F95 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (546):

    544: int tree_dump(const char dot[], const char DUMPNAME[], Tree* tree)
    545: {
=>  546:     assert(tree);
    547: 
    548:     printf("\n~In File: %s\n~In Line: %d\n", __FILE__, __LINE__);

# 5 0x0041BEBD in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (23):

     21:         tree_print(Counter, WRITENAME);
     22: 
=>   23:     tree_dump(dot, DUMPNAME, Counter);
     24: 
     25:     tree_Dtor(Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 10 2018 01:46:20, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 10 2018 01:46:24

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (22, 0x00): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x4FF0 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040B5B3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: _txOnSignal() at D:/TX/TXlib.h (8817)
# 1 0x76516F61 in C:\WINDOWS\System32\msvcrt.dll: raise()
# 2 0x7651B40B in C:\WINDOWS\System32\msvcrt.dll: abort()
# 3 0x76517D8C in C:\WINDOWS\System32\msvcrt.dll: assert()

# 4 0x00402F95 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (546):

    544: int tree_dump(const char dot[], const char DUMPNAME[], Tree* tree)
    545: {
=>  546:     assert(tree);
    547: 
    548:     printf("\n~In File: %s\n~In Line: %d\n", __FILE__, __LINE__);

# 5 0x0041BEBD in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (22):

     20:     if (Counter)
     21:         tree_print(Counter, WRITENAME);
=>   22:         tree_dump(dot, DUMPNAME, Counter);
     23: 
     24:     tree_Dtor(Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 10 2018 01:46:38, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 10 2018 01:46:42

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402D63 в функции get_node() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 469. Попытка прочесть данные по адресу 0x29292939. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x2580 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402D63 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_node() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (469):

    467:                 fscanf(read_file, "%s", var);
    468: 
=>  469:                 int var_index = find_elem(AST->variables, AST->var_count, var);
    470:                 if (var_index >= 0)
    471:                 {

# 2 0x00402AE7 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (406):

    404:             return NULL;
    405: 
=>  406:         Node* new_right = node_read(read_file, tree, error);                    // read the right branch
    407:         if(*error)
    408:         {

# 3 0x00402A93 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (399):

    397:     if (C_READ == '(')
    398:     {
=>  399:         Node* new_left = node_read(read_file, tree, error);                     // read the left branch
    400:         CALL_ERROR;
    401: 

# 4 0x00402A93 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (399):

    397:     if (C_READ == '(')
    398:     {
=>  399:         Node* new_left = node_read(read_file, tree, error);                     // read the left branch
    400:         CALL_ERROR;
    401: 

# 5 0x00402A93 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (399):

    397:     if (C_READ == '(')
    398:     {
=>  399:         Node* new_left = node_read(read_file, tree, error);                     // read the left branch
    400:         CALL_ERROR;
    401: 

# 6 0x00402A93 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (399):

    397:     if (C_READ == '(')
    398:     {
=>  399:         Node* new_left = node_read(read_file, tree, error);                     // read the left branch
    400:         CALL_ERROR;
    401: 

# 7 0x00402946 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (351):

    349:     int error = 0;
    350: 
=>  351:     tree_set_root(tree, node_read(readtxt, tree, &error));
    352: 
    353:     if (error)

# 8 0x0041BF8D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (19):

     17:     //scanf("%s", expression);
     18: 
=>   19:     Tree* Counter = tree_read(WRITENAME); //get_G(expression);
     20:     if (Counter)
     21:     {

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 10 2018 21:37:11, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 10 2018 21:44:25

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402D63 в функции get_node() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 469. Попытка прочесть данные по адресу 0x29292939. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x2580 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402D63 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_node() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (469):

    467:                 fscanf(read_file, "%s", var);
    468: 
=>  469:                 int var_index = find_elem(AST->variables, AST->var_count, var);
    470:                 if (var_index >= 0)
    471:                 {

# 2 0x00402AE7 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (406):

    404:             return NULL;
    405: 
=>  406:         Node* new_right = node_read(read_file, tree, error);                    // read the right branch
    407:         if(*error)
    408:         {

# 3 0x00402A93 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (399):

    397:     if (C_READ == '(')
    398:     {
=>  399:         Node* new_left = node_read(read_file, tree, error);                     // read the left branch
    400:         CALL_ERROR;
    401: 

# 4 0x00402A93 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (399):

    397:     if (C_READ == '(')
    398:     {
=>  399:         Node* new_left = node_read(read_file, tree, error);                     // read the left branch
    400:         CALL_ERROR;
    401: 

# 5 0x00402A93 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (399):

    397:     if (C_READ == '(')
    398:     {
=>  399:         Node* new_left = node_read(read_file, tree, error);                     // read the left branch
    400:         CALL_ERROR;
    401: 

# 6 0x00402A93 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (399):

    397:     if (C_READ == '(')
    398:     {
=>  399:         Node* new_left = node_read(read_file, tree, error);                     // read the left branch
    400:         CALL_ERROR;
    401: 

# 7 0x00402946 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_read() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (351):

    349:     int error = 0;
    350: 
=>  351:     tree_set_root(tree, node_read(readtxt, tree, &error));
    352: 
    353:     if (error)

# 8 0x0041BF8D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (19):

     17:     //scanf("%s", expression);
     18: 
=>   19:     Tree* Counter = tree_read(WRITENAME); //get_G(expression);
     20:     if (Counter)
     21:     {

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 10 2018 21:37:11, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 10 2018 21:44:25

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x770E2D4D в функции RtlGetCurrentServiceSessionId(). Попытка прочесть данные по адресу 0x012E4CD0. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x2C0 (Main), GetLastError(): 126 (Не найден указанный модуль). 

--------------------------------------------------
Стек вызовов:

# 0 0x770E2D4D in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetCurrentServiceSessionId()
# 1 0x770E2302 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()
# 2 0x761170B5 in C:\WINDOWS\System32\msvcrt.dll: free()
# 4 0x66283A18 in D:\TX\Windows\MgwHelp32.dll: EnumDirTree()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 10 2018 21:37:11, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 10 2018 21:47:22

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00403817 в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 686. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x32D0 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00403817 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (686):

    684:     switch(node->type)
    685:     {
=>  686:         CASE_TYPE(OP, yellow, c,
    687:                         if(!RIGHT(node))
    688:                         {
# 2 0x77B122D3 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 22:47:43, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 22:47:46

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00403817 в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 686. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x32D0 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00403817 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (686):

    684:     switch(node->type)
    685:     {
=>  686:         CASE_TYPE(OP, yellow, c,
    687:                         if(!RIGHT(node))
    688:                         {
# 2 0x77B122D3 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 22:47:43, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 22:47:46

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00403809 в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 685. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x3718 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00403809 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (685):

    683:     switch(node->type)
    684:     {
=>  685:         CASE_TYPE(OP, yellow, c,
    686:                         if(!RIGHT(node))
    687:                         {
# 2 0x77B122D3 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 22:47:43, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 22:48:17

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00403809 в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 685. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x3718 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00403809 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (685):

    683:     switch(node->type)
    684:     {
=>  685:         CASE_TYPE(OP, yellow, c,
    686:                         if(!RIGHT(node))
    687:                         {
# 2 0x77B122D3 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 22:47:43, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 22:48:17

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x0040382D в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 685. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x31B8 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040382D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (685):

    683:     switch(node->type)
    684:     {
=>  685:         CASE_TYPE(OP, yellow, c,
    686:                         if(!RIGHT(node))
    687:                         {
# 2 0x77B122D3 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:08:40, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:08:43

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x0040382D в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 685. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x31B8 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040382D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (685):

    683:     switch(node->type)
    684:     {
=>  685:         CASE_TYPE(OP, yellow, c,
    686:                         if(!RIGHT(node))
    687:                         {
# 2 0x77B122D3 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:08:40, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:08:44

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x0040387D в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 685. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x3FA8 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040387D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (685):

    683:     switch(node->type)
    684:     {
=>  685:         CASE_TYPE(OP, yellow, c,
    686:                         if(!RIGHT(node))
    687:                         {
# 2 0x77B122D3 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:21:37, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:27:52

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x0040387D в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 685. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x3FA8 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040387D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (685):

    683:     switch(node->type)
    684:     {
=>  685:         CASE_TYPE(OP, yellow, c,
    686:                         if(!RIGHT(node))
    687:                         {
# 2 0x77B122D3 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:21:37, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:27:53

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x0040388D в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 685. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x19B0 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040388D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (685):

    683:     switch(node->type)
    684:     {
=>  685:         CASE_TYPE(OP, yellow, c,
    686:                         if(!RIGHT(node))
    687:                         {
# 2 0x77B122D3 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:30:27, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:30:30

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x0040388D в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 685. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x19B0 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040388D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (685):

    683:     switch(node->type)
    684:     {
=>  685:         CASE_TYPE(OP, yellow, c,
    686:                         if(!RIGHT(node))
    687:                         {
# 2 0x77B122D3 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:30:27, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:30:30

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00403891 в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 685. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x3C1C (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00403891 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (685):

    683:     switch(node->type)
    684:     {
=>  685:         CASE_TYPE(OP, yellow, c,
    686:                         if(!RIGHT(node))
    687:                         {
# 2 0x77B122D3 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:30:27, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:36:47

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00403891 в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 685. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x3C1C (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00403891 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (685):

    683:     switch(node->type)
    684:     {
=>  685:         CASE_TYPE(OP, yellow, c,
    686:                         if(!RIGHT(node))
    687:                         {
# 2 0x77B122D3 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:30:27, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:36:48

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00403891 в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 685. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x5F8 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00403891 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (685):

    683:     switch(node->type)
    684:     {
=>  685:         CASE_TYPE(OP, yellow, c,
    686:                         if(!RIGHT(node))
    687:                         {
# 2 0x77B122D3 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:30:27, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:40:25

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00403891 в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 685. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x5F8 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00403891 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (685):

    683:     switch(node->type)
    684:     {
=>  685:         CASE_TYPE(OP, yellow, c,
    686:                         if(!RIGHT(node))
    687:                         {
# 2 0x77B122D3 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:30:27, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:40:25

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x004038E4 в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 685. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0xD20 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x004038E4 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (685):

    683:     switch(node->type)
    684:     {
=>  685:         CASE_TYPE(OP, yellow, c,
    686:                         $(node->info);
    687:                         if(!RIGHT(node))

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:30:27, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:41:35

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x004038E4 в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 685. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0xD20 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x004038E4 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (685):

    683:     switch(node->type)
    684:     {
=>  685:         CASE_TYPE(OP, yellow, c,
    686:                         $(node->info);
    687:                         if(!RIGHT(node))

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:30:27, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:41:35

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00403909 в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 685. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x3844 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00403909 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (685):

    683:     switch(node->type)
    684:     {
=>  685:         CASE_TYPE(OP, yellow, c,
    686:                         $((char) node->info);
    687:                         if(!RIGHT(node))

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:30:27, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:42:07

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00403909 в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 685. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x3844 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00403909 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (685):

    683:     switch(node->type)
    684:     {
=>  685:         CASE_TYPE(OP, yellow, c,
    686:                         $((char) node->info);
    687:                         if(!RIGHT(node))

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:30:27, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:42:07

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x0040392B в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 686. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x42BC (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040392B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (686):

    684:     switch(node->type)
    685:     {
=>  686:         CASE_TYPE(OP, yellow, c,
    687:                         if(!RIGHT(node))
    688:                         {

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:30:27, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:43:11

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x0040392B в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 686. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x42BC (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040392B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (686):

    684:     switch(node->type)
    685:     {
=>  686:         CASE_TYPE(OP, yellow, c,
    687:                         if(!RIGHT(node))
    688:                         {

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:30:27, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:43:11

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x0040392B в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 686. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x370C (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040392B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (686):

    684:     switch(node->type)
    685:     {
=>  686:         CASE_TYPE(OP, yellow, c,
    687:                         if(!RIGHT(node))
    688:                         {

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:30:27, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:43:50

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x0040392B в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 686. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x370C (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040392B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (686):

    684:     switch(node->type)
    685:     {
=>  686:         CASE_TYPE(OP, yellow, c,
    687:                         if(!RIGHT(node))
    688:                         {

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:30:27, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:43:49

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00403891 в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 685. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x3620 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00403891 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (685):

    683:     switch(node->type)
    684:     {
=>  685:         CASE_TYPE(OP, yellow, c,
    686:                         if(!RIGHT(node))
    687:                         {
# 2 0x77B122D3 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:30:27, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:44:59

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00403891 в функции node_dump() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 685. Попытка прочесть данные по адресу 0x0A3B207D. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x3620 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00403891 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (685):

    683:     switch(node->type)
    684:     {
=>  685:         CASE_TYPE(OP, yellow, c,
    686:                         if(!RIGHT(node))
    687:                         {
# 2 0x77B122D3 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:30:27, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:44:59

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x77B12F5A в функции RtlGetCurrentServiceSessionId(). Попытка прочесть данные по адресу 0x80000200. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x1984 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x77B12F5A in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetCurrentServiceSessionId()
# 1 0x77B12302 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()
# 2 0x75BB70B5 in C:\WINDOWS\System32\msvcrt.dll: free()

# 3 0x00402420 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: free_table() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (48):

     46:         table[i] = NULL;
     47:     }
=>   48:     free(*table);
     49: }
     50: 

# 4 0x0040232C in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_Dtor() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (27):

     25: 
     26:     tree_clear(tree);
=>   27:     free_table(tree->variables, tree->var_count);
     28: 
     29:     tree->TreeHash_struct = HASHPOIS;

# 5 0x0041C47D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         tree_dump(dot, DUMPNAME, diff_tree);
     26:         tree_Dtor(Counter);
=>   27:         tree_Dtor(diff_tree);
     28:         free(diff_tree);
     29:     }

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:54:08, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:54:11

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x77B12F5A в функции RtlGetCurrentServiceSessionId(). Попытка прочесть данные по адресу 0x80000200. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x1984 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x77B12F5A in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetCurrentServiceSessionId()
# 1 0x77B12302 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()
# 2 0x75BB70B5 in C:\WINDOWS\System32\msvcrt.dll: free()

# 3 0x00402420 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: free_table() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (48):

     46:         table[i] = NULL;
     47:     }
=>   48:     free(*table);
     49: }
     50: 

# 4 0x0040232C in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_Dtor() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (27):

     25: 
     26:     tree_clear(tree);
=>   27:     free_table(tree->variables, tree->var_count);
     28: 
     29:     tree->TreeHash_struct = HASHPOIS;

# 5 0x0041C47D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         tree_dump(dot, DUMPNAME, diff_tree);
     26:         tree_Dtor(Counter);
=>   27:         tree_Dtor(diff_tree);
     28:         free(diff_tree);
     29:     }

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:54:08, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:54:11

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x77B12F5A в функции RtlGetCurrentServiceSessionId(). Попытка прочесть данные по адресу 0x80000200. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x428C (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x77B12F5A in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetCurrentServiceSessionId()
# 1 0x77B12302 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()
# 2 0x75BB70B5 in C:\WINDOWS\System32\msvcrt.dll: free()

# 3 0x00402401 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: free_table() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (45):

     43:             memset (table[i], '\0', strlen(table[i]));
     44:         }
=>   45:         free(table[i]);
     46:         table[i] = NULL;
     47:     }

# 4 0x00402338 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_Dtor() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (27):

     25: 
     26:     tree_clear(tree);
=>   27:     free_table(tree->variables, tree->var_count);
     28: 
     29:     tree->TreeHash_struct = HASHPOIS;

# 5 0x0041C489 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         tree_dump(dot, DUMPNAME, diff_tree);
     26:         tree_Dtor(Counter);
=>   27:         tree_Dtor(diff_tree);
     28:         free(diff_tree);
     29:     }

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:54:08, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:57:39

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x77B12F5A в функции RtlGetCurrentServiceSessionId(). Попытка прочесть данные по адресу 0x80000200. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x428C (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x77B12F5A in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetCurrentServiceSessionId()
# 1 0x77B12302 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()
# 2 0x75BB70B5 in C:\WINDOWS\System32\msvcrt.dll: free()

# 3 0x00402401 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: free_table() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (45):

     43:             memset (table[i], '\0', strlen(table[i]));
     44:         }
=>   45:         free(table[i]);
     46:         table[i] = NULL;
     47:     }

# 4 0x00402338 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_Dtor() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (27):

     25: 
     26:     tree_clear(tree);
=>   27:     free_table(tree->variables, tree->var_count);
     28: 
     29:     tree->TreeHash_struct = HASHPOIS;

# 5 0x0041C489 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         tree_dump(dot, DUMPNAME, diff_tree);
     26:         tree_Dtor(Counter);
=>   27:         tree_Dtor(diff_tree);
     28:         free(diff_tree);
     29:     }

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:54:08, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:57:39

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x77B12F5A в функции RtlGetCurrentServiceSessionId(). Попытка прочесть данные по адресу 0x80000200. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x3094 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x77B12F5A in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetCurrentServiceSessionId()
# 1 0x77B12302 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()
# 2 0x75BB70B5 in C:\WINDOWS\System32\msvcrt.dll: free()

# 3 0x00402401 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: free_table() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (45):

     43:             memset (table[i], '\0', strlen(table[i]));
     44:         }
=>   45:         free(table[i]);
     46:         table[i] = NULL;
     47:     }

# 4 0x00402338 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_Dtor() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (27):

     25: 
     26:     tree_clear(tree);
=>   27:     free_table(tree->variables, tree->var_count);
     28: 
     29:     tree->TreeHash_struct = HASHPOIS;

# 5 0x0041C489 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         tree_dump(dot, DUMPNAME, diff_tree);
     26:         tree_Dtor(Counter);
=>   27:         tree_Dtor(diff_tree);
     28:         free(diff_tree);
     29:     }

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:54:08, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:58:07

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x77B12F5A в функции RtlGetCurrentServiceSessionId(). Попытка прочесть данные по адресу 0x80000200. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x3094 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x77B12F5A in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetCurrentServiceSessionId()
# 1 0x77B12302 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()
# 2 0x75BB70B5 in C:\WINDOWS\System32\msvcrt.dll: free()

# 3 0x00402401 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: free_table() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (45):

     43:             memset (table[i], '\0', strlen(table[i]));
     44:         }
=>   45:         free(table[i]);
     46:         table[i] = NULL;
     47:     }

# 4 0x00402338 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_Dtor() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (27):

     25: 
     26:     tree_clear(tree);
=>   27:     free_table(tree->variables, tree->var_count);
     28: 
     29:     tree->TreeHash_struct = HASHPOIS;

# 5 0x0041C489 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         tree_dump(dot, DUMPNAME, diff_tree);
     26:         tree_Dtor(Counter);
=>   27:         tree_Dtor(diff_tree);
     28:         free(diff_tree);
     29:     }

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:54:08, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 11 2018 23:58:08

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x77B12F5A в функции RtlGetCurrentServiceSessionId(). Попытка прочесть данные по адресу 0x80000200. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x23F4 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x77B12F5A in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetCurrentServiceSessionId()
# 1 0x77B12302 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()
# 2 0x75BB70B5 in C:\WINDOWS\System32\msvcrt.dll: free()

# 3 0x00402401 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: free_table() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (44):

     42:         {
     43:             memset (table[i], '\0', strlen(table[i]));
=>   44:             free(table[i]);
     45:             table[i] = NULL;
     46:         }

# 4 0x00402338 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_Dtor() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (27):

     25: 
     26:     tree_clear(tree);
=>   27:     free_table(tree->variables, tree->var_count);
     28: 
     29:     tree->TreeHash_struct = HASHPOIS;

# 5 0x0041C489 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         tree_dump(dot, DUMPNAME, diff_tree);
     26:         tree_Dtor(Counter);
=>   27:         tree_Dtor(diff_tree);
     28:         free(diff_tree);
     29:     }

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:54:08, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 00:03:25

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x77B12F5A в функции RtlGetCurrentServiceSessionId(). Попытка прочесть данные по адресу 0x80000200. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x23F4 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x77B12F5A in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetCurrentServiceSessionId()
# 1 0x77B12302 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()
# 2 0x75BB70B5 in C:\WINDOWS\System32\msvcrt.dll: free()

# 3 0x00402401 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: free_table() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (44):

     42:         {
     43:             memset (table[i], '\0', strlen(table[i]));
=>   44:             free(table[i]);
     45:             table[i] = NULL;
     46:         }

# 4 0x00402338 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_Dtor() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (27):

     25: 
     26:     tree_clear(tree);
=>   27:     free_table(tree->variables, tree->var_count);
     28: 
     29:     tree->TreeHash_struct = HASHPOIS;

# 5 0x0041C489 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         tree_dump(dot, DUMPNAME, diff_tree);
     26:         tree_Dtor(Counter);
=>   27:         tree_Dtor(diff_tree);
     28:         free(diff_tree);
     29:     }

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 11 2018 23:54:08, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 00:03:25

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (22, 0x00): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x4738 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040BC2F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: _txOnSignal() at D:/TX/TXlib.h (8817)
# 1 0x75BC6F61 in C:\WINDOWS\System32\msvcrt.dll: raise()
# 2 0x75BCB40B in C:\WINDOWS\System32\msvcrt.dll: abort()
# 3 0x75BC7D8C in C:\WINDOWS\System32\msvcrt.dll: assert()

# 4 0x0040261E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: branch_copy() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (106):

    104: Node* branch_copy(Node* source_node, unsigned int* out_vertex_num)
    105: {
=>  106:     assert(source_node);
    107: 
    108:     if (!source_node)

# 5 0x0040265E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: branch_copy() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (115):

    113:     Node* new_node = node_create(source_node->type, source_node->info);
    114: 
=>  115:     LEFT(new_node)  = branch_copy(LEFT(source_node), out_vertex_num);
    116:     RIGHT(new_node) = branch_copy(RIGHT(source_node), out_vertex_num);
    117: 

# 6 0x0040203C in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_diff() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (307):

    305:                 case '*':
    306:                 {
=>  307:                     Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));
    308:                     Node* right_part_branch = MUL(COPY(LEFT(node)), DIF(RIGHT(node)));
    309:                     NEW_NODE(SUM(left_part_branch, right_part_branch));

# 7 0x00401E59 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_diff() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (233):

    231: 
    232:     unsigned int diff_tree_size = 0;
=>  233:     Node* Diff_Tree = leaf_diff(AST, node, &diff_tree_size);
    234: 
    235:     Tree* tree = (Tree*) calloc(1, sizeof(*tree));                                                  // new

# 8 0x0041C4F8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (22):

     20:     if (Counter)
     21:     {
=>   22:         Tree* diff_tree = AST_diff(Counter, ROOT(Counter));
     23:         tree_save(Counter, WRITENAME);
     24: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 01:19:04, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 01:19:29

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x77B12D4D в функции RtlGetCurrentServiceSessionId(). Попытка прочесть данные по адресу 0x01185388. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FD2F0 (32-bit), Flags: Cmdre0, Thread: 0x3698 (Main), GetLastError(): 126 (Не найден указанный модуль). 

--------------------------------------------------
Стек вызовов:

# 0 0x77B12D4D in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetCurrentServiceSessionId()
# 1 0x77B12302 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()
# 2 0x75BB70B5 in C:\WINDOWS\System32\msvcrt.dll: free()
# 4 0x66283A18 in D:\TX\Windows\MgwHelp32.dll: EnumDirTree()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 01:19:04, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 01:24:16

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x0040245D в функции node_print() в файле C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp на строке 387. Попытка прочесть данные по адресу 0x00000008. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x588 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040245D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (387):

    385:         case OP:
    386:             {
=>  387:                 if (operation_priority((int) node->info) < operation_priority((int) PARENT(node)->info))
    388:                 {
    389:                     fprintf(print_file, "(");

# 1 0x00402305 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (348):

    346:                         $\n");
    347: 
=>  348:     node_print(tex_file, AST, ROOT(AST));
    349: 
    350:     fprintf(tex_file, "\n\\end{document}");

# 2 0x0041CABC in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (26):

     24:         tree_save(Counter, SAVENAME);
     25: 
=>   26:         AST_print(PRINTNAME, Counter);
     27:         tree_Dtor(Counter);
     28:     }

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 11:47:29, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 11:47:32

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x0040245D в функции node_print() в файле C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp на строке 387. Попытка прочесть данные по адресу 0x00000008. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x588 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040245D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (387):

    385:         case OP:
    386:             {
=>  387:                 if (operation_priority((int) node->info) < operation_priority((int) PARENT(node)->info))
    388:                 {
    389:                     fprintf(print_file, "(");

# 1 0x00402305 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (348):

    346:                         $\n");
    347: 
=>  348:     node_print(tex_file, AST, ROOT(AST));
    349: 
    350:     fprintf(tex_file, "\n\\end{document}");

# 2 0x0041CABC in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (26):

     24:         tree_save(Counter, SAVENAME);
     25: 
=>   26:         AST_print(PRINTNAME, Counter);
     27:         tree_Dtor(Counter);
     28:     }

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 11:47:29, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 11:47:33

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402764 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 106. Попытка прочесть данные по адресу 0x00000010. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x26C0 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402764 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (106):

    104: 
    105: 
=>  106: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    107: 
    108:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 2 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 3 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 4 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 5 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 6 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 7 0x0041D681 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_draw(dot, DUMPNAME, Counter);
=>   25:         printf("%d", AST_simplify(Counter, ROOT(Counter)));
     26:         tree_save(Counter, SAVENAME);
     27: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 19:27:53, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 19:29:05

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402764 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 106. Попытка прочесть данные по адресу 0x00000010. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x26C0 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402764 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (106):

    104: 
    105: 
=>  106: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    107: 
    108:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 2 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 3 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 4 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 5 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 6 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 7 0x0041D681 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_draw(dot, DUMPNAME, Counter);
=>   25:         printf("%d", AST_simplify(Counter, ROOT(Counter)));
     26:         tree_save(Counter, SAVENAME);
     27: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 19:27:53, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 19:29:05

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402764 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 106. Попытка прочесть данные по адресу 0x00000010. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x4578 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402764 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (106):

    104: 
    105: 
=>  106: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    107: 
    108:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 2 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 3 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 4 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 5 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 6 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 7 0x0041D661 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (24):

     22:     {
     23:         AST_diff(Counter, ROOT(Counter));
=>   24:         printf("%d", AST_simplify(Counter, ROOT(Counter)));
     25:         tree_save(Counter, SAVENAME);
     26: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 19:29:50, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 19:29:54

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402764 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 106. Попытка прочесть данные по адресу 0x00000010. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x4578 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402764 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (106):

    104: 
    105: 
=>  106: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    107: 
    108:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 2 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 3 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 4 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 5 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 6 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 7 0x0041D661 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (24):

     22:     {
     23:         AST_diff(Counter, ROOT(Counter));
=>   24:         printf("%d", AST_simplify(Counter, ROOT(Counter)));
     25:         tree_save(Counter, SAVENAME);
     26: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 19:29:50, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 19:29:54

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402764 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 106. Попытка прочесть данные по адресу 0x00000010. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x4668 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402764 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (106):

    104: 
    105: 
=>  106: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    107: 
    108:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 2 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 3 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 4 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 5 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 6 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 7 0x0041D661 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (24):

     22:     {
     23:         AST_diff(Counter, ROOT(Counter));
=>   24:         printf("%d", AST_simplify(Counter, ROOT(Counter)));
     25:         tree_save(Counter, SAVENAME);
     26: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 19:29:50, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 19:31:10

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402764 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 106. Попытка прочесть данные по адресу 0x00000010. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x4668 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402764 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (106):

    104: 
    105: 
=>  106: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    107: 
    108:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 2 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 3 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 4 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 5 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 6 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 7 0x0041D661 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (24):

     22:     {
     23:         AST_diff(Counter, ROOT(Counter));
=>   24:         printf("%d", AST_simplify(Counter, ROOT(Counter)));
     25:         tree_save(Counter, SAVENAME);
     26: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 19:29:50, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 19:31:10

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402764 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 106. Попытка прочесть данные по адресу 0x00000010. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x5980 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402764 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (106):

    104: 
    105: 
=>  106: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    107: 
    108:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 2 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 3 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 4 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 5 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 6 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 7 0x0041D661 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (24):

     22:     {
     23:         AST_diff(Counter, ROOT(Counter));
=>   24:         printf("%d", AST_simplify(Counter, ROOT(Counter)));
     25:         tree_save(Counter, SAVENAME);
     26: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 19:29:50, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 19:41:36

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402764 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 106. Попытка прочесть данные по адресу 0x00000010. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x5980 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402764 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (106):

    104: 
    105: 
=>  106: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    107: 
    108:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 2 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 3 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 4 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 5 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 6 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 7 0x0041D661 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (24):

     22:     {
     23:         AST_diff(Counter, ROOT(Counter));
=>   24:         printf("%d", AST_simplify(Counter, ROOT(Counter)));
     25:         tree_save(Counter, SAVENAME);
     26: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 19:29:50, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 19:41:36

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402764 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 106. Попытка прочесть данные по адресу 0x00000010. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x58F8 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402764 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (106):

    104: 
    105: 
=>  106: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    107: 
    108:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 2 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 3 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 4 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 5 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 6 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 7 0x0041D6C1 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         printf("%d", AST_simplify(Counter, ROOT(Counter)));
     26:         tree_save(Counter, SAVENAME);
     27: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 19:49:10, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 19:49:13

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402764 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 106. Попытка прочесть данные по адресу 0x00000010. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x6A4 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402764 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (106):

    104: 
    105: 
=>  106: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    107: 
    108:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 2 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 3 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 4 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 5 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 6 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 7 0x0041D6C1 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         printf("%d", AST_simplify(Counter, ROOT(Counter)));
     26:         tree_save(Counter, SAVENAME);
     27: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 19:49:10, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 19:49:23

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402764 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 106. Попытка прочесть данные по адресу 0x00000010. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x6A4 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402764 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (106):

    104: 
    105: 
=>  106: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    107: 
    108:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 2 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 3 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 4 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 5 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 6 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 7 0x0041D6C1 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         printf("%d", AST_simplify(Counter, ROOT(Counter)));
     26:         tree_save(Counter, SAVENAME);
     27: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 19:49:10, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 19:49:23

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402764 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 106. Попытка прочесть данные по адресу 0x00000010. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x29E8 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402764 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (106):

    104: 
    105: 
=>  106: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    107: 
    108:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 2 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 3 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 4 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 5 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 6 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 7 0x0041D6C1 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         printf("%d", AST_simplify(Counter, ROOT(Counter)));
     26:         tree_save(Counter, SAVENAME);
     27: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 19:49:10, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 19:49:40

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402764 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 106. Попытка прочесть данные по адресу 0x00000010. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x29E8 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402764 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (106):

    104: 
    105: 
=>  106: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    107: 
    108:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 2 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 3 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 4 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 5 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 6 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 7 0x0041D6C1 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         printf("%d", AST_simplify(Counter, ROOT(Counter)));
     26:         tree_save(Counter, SAVENAME);
     27: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 19:49:10, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 19:49:39

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402764 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 106. Попытка прочесть данные по адресу 0x00000010. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x5920 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402764 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (106):

    104: 
    105: 
=>  106: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    107: 
    108:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 2 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 3 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 4 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 5 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 6 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 7 0x0041D6C1 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         printf("%d", AST_simplify(Counter, ROOT(Counter)));
     26:         tree_save(Counter, SAVENAME);
     27: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 19:49:10, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 19:50:02

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402764 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 106. Попытка прочесть данные по адресу 0x00000010. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x5920 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402764 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (106):

    104: 
    105: 
=>  106: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    107: 
    108:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 2 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 3 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 4 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 5 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 6 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 7 0x0041D6C1 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         printf("%d", AST_simplify(Counter, ROOT(Counter)));
     26:         tree_save(Counter, SAVENAME);
     27: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 19:49:10, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 19:50:03

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402664 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 82. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x1884 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402664 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (82):

     80: 
     81: 
=>   82: OP_DEF('-', 2, "-", result = LEFT_COUNT - RIGHT_COUNT,
     83: 
     84:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 1 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 2 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 3 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 4 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 5 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 6 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 7 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 8 0x0041D6ED in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         printf("%d", AST_simplify(Counter, ROOT(Counter)));
     26:         tree_save(Counter, SAVENAME);
     27: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 19:49:10, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:02:41

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402664 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 82. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x1884 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402664 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (82):

     80: 
     81: 
=>   82: OP_DEF('-', 2, "-", result = LEFT_COUNT - RIGHT_COUNT,
     83: 
     84:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 1 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 2 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 3 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 4 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 5 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 6 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 7 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 8 0x0041D6ED in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         printf("%d", AST_simplify(Counter, ROOT(Counter)));
     26:         tree_save(Counter, SAVENAME);
     27: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 19:49:10, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:02:41

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#2: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x77B1163B в функции RtlReAllocateHeap(). Попытка прочесть данные по адресу 0x00000014. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x443C (Main), GetLastError(): 2 (Не удается найти указанный файл). 

--------------------------------------------------
Стек вызовов:

# 0 0x77B1163B in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlReAllocateHeap()
# 1 0x77B11528 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlReAllocateHeap()
# 2 0x77B11443 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlReAllocateHeap()
# 3 0x75BB7649 in C:\WINDOWS\System32\msvcrt.dll: realloc()
# 4 0x004596C4 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: pthread_key_create()
# 5 0x00429311 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: __shmem_init_init()
# 6 0x00429534 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: __cxa_get_globals()
# 7 0x0040CB14 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: _txError() at D:/TX/TXlib.h (8735)
# 8 0x0040D74C in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: _txOnExceptionSEH() at D:/TX/TXlib.h (9234)
# 9 0x0040D17B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: _txVectoredExceptionHandler() at D:/TX/TXlib.h (9132)
#10 0x77B2DE31 in C:\WINDOWS\SYSTEM32\ntdll.dll: EtwRegisterTraceGuidsW()
#11 0x77B32A2F in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlUnwind()
#12 0x77B3C6E6 in C:\WINDOWS\SYSTEM32\ntdll.dll: KiUserExceptionDispatcher()

#13 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

#14 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

#15 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

#16 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

#17 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

#18 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

#19 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

#20 0x0041D6ED in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         printf("%d", AST_simplify(Counter, ROOT(Counter)));
     26:         tree_save(Counter, SAVENAME);
     27: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 19:49:10, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:03:33

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#2: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x77B1163B в функции RtlReAllocateHeap(). Попытка прочесть данные по адресу 0x00000014. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#3: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x443C (Main), GetLastError(): 2 (Не удается найти указанный файл). 

--------------------------------------------------
Стек вызовов:

# 0 0x77B1163B in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlReAllocateHeap()
# 1 0x77B11528 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlReAllocateHeap()
# 2 0x77B11443 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlReAllocateHeap()
# 3 0x75BB7649 in C:\WINDOWS\System32\msvcrt.dll: realloc()
# 4 0x004596C4 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: pthread_key_create()
# 5 0x00429311 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: __shmem_init_init()
# 6 0x00429534 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: __cxa_get_globals()
# 7 0x0040CB14 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: _txError() at D:/TX/TXlib.h (8735)
# 8 0x0040D74C in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: _txOnExceptionSEH() at D:/TX/TXlib.h (9234)
# 9 0x0040D17B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: _txVectoredExceptionHandler() at D:/TX/TXlib.h (9132)
#10 0x77B2DE31 in C:\WINDOWS\SYSTEM32\ntdll.dll: EtwRegisterTraceGuidsW()
#11 0x77B32A2F in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlUnwind()
#12 0x77B3C6E6 in C:\WINDOWS\SYSTEM32\ntdll.dll: KiUserExceptionDispatcher()

#13 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

#14 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

#15 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

#16 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

#17 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

#18 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

#19 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

#20 0x0041D6ED in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         printf("%d", AST_simplify(Counter, ROOT(Counter)));
     26:         tree_save(Counter, SAVENAME);
     27: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 19:49:10, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:03:33

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402664 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 82. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x5BEC (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402664 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (82):

     80: 
     81: 
=>   82: OP_DEF('-', 2, "-", result = LEFT_COUNT - RIGHT_COUNT,
     83: 
     84:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 1 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 2 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 3 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 4 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 5 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 6 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 7 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 8 0x0041D6ED in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         printf("%d", AST_simplify(Counter, ROOT(Counter)));
     26:         tree_save(Counter, SAVENAME);
     27: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 19:49:10, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:04:02

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402664 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 82. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x5BEC (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402664 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (82):

     80: 
     81: 
=>   82: OP_DEF('-', 2, "-", result = LEFT_COUNT - RIGHT_COUNT,
     83: 
     84:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 1 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 2 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 3 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 4 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 5 0x00402343 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (342):

    340:     }
    341: 
=>  342:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    343:     {
    344:         return 1;

# 6 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 7 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 8 0x0041D6ED in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         printf("%d", AST_simplify(Counter, ROOT(Counter)));
     26:         tree_save(Counter, SAVENAME);
     27: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 19:49:10, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:04:02

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x004046A8 в функции node_is_OK() в файле C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp на строке 640. Попытка прочесть данные по адресу 0x2E646D77. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x590C (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x004046A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_is_OK() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (640):

    638:     }
    639: 
=>  640:     int left_error = node_is_OK(LEFT(node), counter);
    641:     int right_error = node_is_OK(RIGHT(node), counter);
    642: 

# 1 0x004046BA in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_is_OK() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (640):

    638:     }
    639: 
=>  640:     int left_error = node_is_OK(LEFT(node), counter);
    641:     int right_error = node_is_OK(RIGHT(node), counter);
    642: 

# 2 0x004046D2 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_is_OK() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (641):

    639: 
    640:     int left_error = node_is_OK(LEFT(node), counter);
=>  641:     int right_error = node_is_OK(RIGHT(node), counter);
    642: 
    643:     IF_RETURN(left_error);

# 3 0x004046D2 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_is_OK() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (641):

    639: 
    640:     int left_error = node_is_OK(LEFT(node), counter);
=>  641:     int right_error = node_is_OK(RIGHT(node), counter);
    642: 
    643:     IF_RETURN(left_error);

# 4 0x004046D2 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_is_OK() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (641):

    639: 
    640:     int left_error = node_is_OK(LEFT(node), counter);
=>  641:     int right_error = node_is_OK(RIGHT(node), counter);
    642: 
    643:     IF_RETURN(left_error);

# 5 0x004046BA in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_is_OK() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (640):

    638:     }
    639: 
=>  640:     int left_error = node_is_OK(LEFT(node), counter);
    641:     int right_error = node_is_OK(RIGHT(node), counter);
    642: 

# 6 0x004045F7 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_is_OK() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (610):

    608:     unsigned int counter = 0;
    609: 
=>  610:     error = node_is_OK(ROOT(tree), &counter);
    611:     IF_RETURN(error);
    612: 

# 7 0x004048EB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: tree_dump() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (686):

    684:     RE_STORE;
    685:     printf("\n   INFO: \n");\
=>  686:     switch(tree_is_OK(tree))
    687:     {
    688:         CASE_TREE_OK(TRERROK,    "Tree is OK");

# 8 0x0041D6F1 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         tree_save(Counter, SAVENAME);
     26:         AST_print(PRINTNAME, Counter);
=>   27:         tree_dump(dot, DUMPNAME, Counter);
     28: 
     29:         tree_Dtor(Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:09:17, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:11:23

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (22, 0x00): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x3EE4 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040CDD3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: _txOnSignal() at D:/TX/TXlib.h (8817)
# 1 0x75BC6F61 in C:\WINDOWS\System32\msvcrt.dll: raise()
# 2 0x75BCB40B in C:\WINDOWS\System32\msvcrt.dll: abort()
# 3 0x75BC7D8C in C:\WINDOWS\System32\msvcrt.dll: assert()

# 4 0x004034CD in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_Dtor() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (68):

     66: void node_Dtor(Node* node)
     67: {
=>   68:     assert(node);
     69: 
     70:     node->node_guard_begin = GUARDPOIS;

# 5 0x0040289F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (110):

    108: 
    109: 
=>  110: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    111: 
    112:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 6 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 7 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D6D9 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (24):

     22:     {
     23:         AST_diff(Counter, ROOT(Counter));
=>   24:         printf("%p", AST_simplify(Counter, ROOT(Counter)));
     25:         tree_save(Counter, SAVENAME);
     26:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:09:17, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:12:11

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (22, 0x00): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x59A8 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040CDD3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: _txOnSignal() at D:/TX/TXlib.h (8817)
# 1 0x75BC6F61 in C:\WINDOWS\System32\msvcrt.dll: raise()
# 2 0x75BCB40B in C:\WINDOWS\System32\msvcrt.dll: abort()
# 3 0x75BC7D8C in C:\WINDOWS\System32\msvcrt.dll: assert()

# 4 0x004034CD in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_Dtor() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (68):

     66: void node_Dtor(Node* node)
     67: {
=>   68:     assert(node);
     69: 
     70:     node->node_guard_begin = GUARDPOIS;

# 5 0x0040289F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (110):

    108: 
    109: 
=>  110: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    111: 
    112:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 6 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 7 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D6D9 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (24):

     22:     {
     23:         AST_diff(Counter, ROOT(Counter));
=>   24:         printf("%p", AST_simplify(Counter, ROOT(Counter)));
     25:         tree_save(Counter, SAVENAME);
     26:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:09:17, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:12:19

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (22, 0x00): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x4FE4 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040CDD3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: _txOnSignal() at D:/TX/TXlib.h (8817)
# 1 0x75BC6F61 in C:\WINDOWS\System32\msvcrt.dll: raise()
# 2 0x75BCB40B in C:\WINDOWS\System32\msvcrt.dll: abort()
# 3 0x75BC7D8C in C:\WINDOWS\System32\msvcrt.dll: assert()

# 4 0x004034CD in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_Dtor() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (68):

     66: void node_Dtor(Node* node)
     67: {
=>   68:     assert(node);
     69: 
     70:     node->node_guard_begin = GUARDPOIS;

# 5 0x0040289F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (110):

    108: 
    109: 
=>  110: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    111: 
    112:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 6 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 7 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D6D9 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (24):

     22:     {
     23:         AST_diff(Counter, ROOT(Counter));
=>   24:         printf("%p", AST_simplify(Counter, ROOT(Counter)));
     25:         tree_save(Counter, SAVENAME);
     26:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:09:17, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:13:50

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (22, 0x00): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x3474 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040CDD3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: _txOnSignal() at D:/TX/TXlib.h (8817)
# 1 0x75BC6F61 in C:\WINDOWS\System32\msvcrt.dll: raise()
# 2 0x75BCB40B in C:\WINDOWS\System32\msvcrt.dll: abort()
# 3 0x75BC7D8C in C:\WINDOWS\System32\msvcrt.dll: assert()

# 4 0x004034CD in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_Dtor() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (68):

     66: void node_Dtor(Node* node)
     67: {
=>   68:     assert(node);
     69: 
     70:     node->node_guard_begin = GUARDPOIS;

# 5 0x0040289F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (110):

    108: 
    109: 
=>  110: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    111: 
    112:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 6 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 7 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D6D9 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (24):

     22:     {
     23:         AST_diff(Counter, ROOT(Counter));
=>   24:         printf("%p", AST_simplify(Counter, ROOT(Counter)));
     25:         //tree_save(Counter, SAVENAME);
     26:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:18:11, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:18:14

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (22, 0x00): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x50CC (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0040CDD3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: _txOnSignal() at D:/TX/TXlib.h (8817)
# 1 0x75BC6F61 in C:\WINDOWS\System32\msvcrt.dll: raise()
# 2 0x75BCB40B in C:\WINDOWS\System32\msvcrt.dll: abort()
# 3 0x75BC7D8C in C:\WINDOWS\System32\msvcrt.dll: assert()

# 4 0x004034CD in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: node_Dtor() at C:/Users/zue26/Documents/GitHub/Counter/CountTree.cpp (68):

     66: void node_Dtor(Node* node)
     67: {
=>   68:     assert(node);
     69: 
     70:     node->node_guard_begin = GUARDPOIS;

# 5 0x0040289F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (110):

    108: 
    109: 
=>  110: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    111: 
    112:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 6 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 7 0x0040231B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (337):

    335:     }
    336: 
=>  337:     if(leaf_simplify(LEFT(node), out_vertex_num))
    338:     {
    339:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D6D9 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (24):

     22:     {
     23:         AST_diff(Counter, ROOT(Counter));
=>   24:         AST_simplify(Counter, ROOT(Counter));
     25:         //tree_save(Counter, SAVENAME);
     26:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:18:26, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:18:30

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402867 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 108. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x5AFC (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402867 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (108):

    106: 
    107: 
=>  108: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    109: 
    110:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040234E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (344):

    342:     }
    343: 
=>  344:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    345:     {
    346:         return 1;

# 2 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 3 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 4 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 5 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 6 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 7 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D529 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (24):

     22:     {
     23:         AST_diff(Counter, ROOT(Counter));
=>   24:         AST_simplify(Counter, ROOT(Counter));
     25:         //tree_save(Counter, SAVENAME);
     26:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:28:51, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:30:09

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402867 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 108. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x5AFC (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402867 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (108):

    106: 
    107: 
=>  108: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    109: 
    110:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040234E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (344):

    342:     }
    343: 
=>  344:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    345:     {
    346:         return 1;

# 2 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 3 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 4 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 5 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 6 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 7 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D529 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (24):

     22:     {
     23:         AST_diff(Counter, ROOT(Counter));
=>   24:         AST_simplify(Counter, ROOT(Counter));
     25:         //tree_save(Counter, SAVENAME);
     26:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:28:51, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:30:08

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402867 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 108. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x5030 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402867 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (108):

    106: 
    107: 
=>  108: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    109: 
    110:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040234E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (344):

    342:     }
    343: 
=>  344:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    345:     {
    346:         return 1;

# 2 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 3 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 4 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 5 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 6 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 7 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D529 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (24):

     22:     {
     23:         AST_diff(Counter, ROOT(Counter));
=>   24:         AST_simplify(Counter, ROOT(Counter));
     25:         //tree_save(Counter, SAVENAME);
     26:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:28:51, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:30:55

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402867 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 108. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x5030 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402867 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (108):

    106: 
    107: 
=>  108: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    109: 
    110:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040234E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (344):

    342:     }
    343: 
=>  344:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    345:     {
    346:         return 1;

# 2 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 3 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 4 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 5 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 6 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 7 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D529 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (24):

     22:     {
     23:         AST_diff(Counter, ROOT(Counter));
=>   24:         AST_simplify(Counter, ROOT(Counter));
     25:         //tree_save(Counter, SAVENAME);
     26:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:28:51, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:30:55

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402867 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 108. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x4C50 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402867 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (108):

    106: 
    107: 
=>  108: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    109: 
    110:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040234E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (344):

    342:     }
    343: 
=>  344:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    345:     {
    346:         return 1;

# 2 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 3 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 4 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 5 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 6 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 7 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D549 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
     27:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:31:22

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402867 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 108. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x4C50 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402867 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (108):

    106: 
    107: 
=>  108: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    109: 
    110:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040234E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (344):

    342:     }
    343: 
=>  344:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    345:     {
    346:         return 1;

# 2 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 3 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 4 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 5 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 6 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 7 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D549 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
     27:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:31:23

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x004028AC в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 108. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x3804 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x004028AC in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (108):

    106: 
    107: 
=>  108: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    109: 
    110:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040234E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (344):

    342:     }
    343: 
=>  344:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    345:     {
    346:         return 1;

# 2 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 3 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 4 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 5 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 6 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 7 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D58D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
     27:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:35:15

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x004028AC в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 108. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x3804 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x004028AC in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (108):

    106: 
    107: 
=>  108: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    109: 
    110:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040234E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (344):

    342:     }
    343: 
=>  344:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    345:     {
    346:         return 1;

# 2 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 3 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 4 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 5 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 6 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 7 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D58D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
     27:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:35:15

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402867 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 108. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x5A08 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402867 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (108):

    106: 
    107: 
=>  108: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    109: 
    110:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040234E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (344):

    342:     }
    343: 
=>  344:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    345:     {
    346:         return 1;

# 2 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 3 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 4 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 5 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 6 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 7 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D549 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
     27:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:35:37

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402867 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 108. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x5A08 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402867 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (108):

    106: 
    107: 
=>  108: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    109: 
    110:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040234E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (344):

    342:     }
    343: 
=>  344:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    345:     {
    346:         return 1;

# 2 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 3 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 4 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 5 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 6 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 7 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D549 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
     27:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:35:37

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x004029C8 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 109. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x4C60 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x004029C8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (109):

    107: 
    108: 
=>  109: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    110: 
    111:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040234E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (344):

    342:     }
    343: 
=>  344:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    345:     {
    346:         return 1;

# 2 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 3 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 4 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 5 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 6 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 7 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D6ED in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
     27:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:36:07

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x004029C8 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 109. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x4C60 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x004029C8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (109):

    107: 
    108: 
=>  109: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    110: 
    111:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040234E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (344):

    342:     }
    343: 
=>  344:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    345:     {
    346:         return 1;

# 2 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 3 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 4 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 5 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 6 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 7 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D6ED in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
     27:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:36:07

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402983 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 109. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x50BC (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402983 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (109):

    107: 
    108: 
=>  109: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    110: 
    111:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040234E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (344):

    342:     }
    343: 
=>  344:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    345:     {
    346:         return 1;

# 2 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 3 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 4 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 5 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 6 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 7 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D6ED in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
     27:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:36:35

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402983 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 109. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x50BC (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402983 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (109):

    107: 
    108: 
=>  109: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    110: 
    111:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040234E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (344):

    342:     }
    343: 
=>  344:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    345:     {
    346:         return 1;

# 2 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 3 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 4 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 5 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 6 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 7 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D6ED in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
     27:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:36:35

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x004029C8 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 109. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x1AA0 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x004029C8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (109):

    107: 
    108: 
=>  109: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    110: 
    111:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040234E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (344):

    342:     }
    343: 
=>  344:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    345:     {
    346:         return 1;

# 2 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 3 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 4 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 5 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 6 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 7 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D6ED in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
     27:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:37:02

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x004029C8 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 109. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x4128 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x004029C8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (109):

    107: 
    108: 
=>  109: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    110: 
    111:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040234E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (344):

    342:     }
    343: 
=>  344:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    345:     {
    346:         return 1;

# 2 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 3 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 4 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 5 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 6 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 7 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D6ED in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
     27:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:37:27

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x004029C8 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 109. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x4128 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x004029C8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (109):

    107: 
    108: 
=>  109: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    110: 
    111:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040234E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (344):

    342:     }
    343: 
=>  344:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    345:     {
    346:         return 1;

# 2 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 3 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 4 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 5 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 6 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 7 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D6ED in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
     27:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:37:27

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00402983 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 109. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x5024 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402983 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (109):

    107: 
    108: 
=>  109: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    110: 
    111:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040234E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (344):

    342:     }
    343: 
=>  344:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    345:     {
    346:         return 1;

# 2 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 3 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 4 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 5 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 6 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 7 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D6ED in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
     27:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:38:02

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x004029C8 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 109. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0xF7C (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x004029C8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (109):

    107: 
    108: 
=>  109: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    110: 
    111:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040234E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (344):

    342:     }
    343: 
=>  344:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    345:     {
    346:         return 1;

# 2 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 3 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 4 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 5 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 6 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 7 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D6ED in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
     27:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:38:23

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x004029C8 в функции leaf_simplify() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 109. Попытка прочесть данные по адресу 0x00000018. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0xF7C (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x004029C8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (109):

    107: 
    108: 
=>  109: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    110: 
    111:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 1 0x0040234E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (344):

    342:     }
    343: 
=>  344:     if(leaf_simplify(RIGHT(node), out_vertex_num))
    345:     {
    346:         return 1;

# 2 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 3 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 4 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 5 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 6 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 7 0x00402326 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (339):

    337:     }
    338: 
=>  339:     if(leaf_simplify(LEFT(node), out_vertex_num))
    340:     {
    341:         return 1;

# 8 0x004022A8 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_simplify() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (318):

    316:     int simple_tree_size = 0;
    317: 
=>  318:     if(leaf_simplify(start_node, &simple_tree_size))
    319:     {
    320:         return NULL;

# 9 0x0041D6ED in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (25):

     23:         AST_diff(Counter, ROOT(Counter));
     24:         tree_dump(dot, DUMPNAME, Counter);
=>   25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
     27:         AST_print(PRINTNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:38:23

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Недопустимая операция с плавающей точкой.

#1: Исключение EXCEPTION_FLT_INVALID_OPERATION (0xC0000090) при выполнении кода по адресу 0x00402BF0 в функции leaf_print() в файле C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp на строке 441. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x3F7C (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402BF0 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (441):

    439:         case OP:
    440:             {
=>  441:                 if (PARENT(node) && (OPER(PARENT(node)) != '/') && operation_priority(OPER(node)) > operation_priority(OPER(PARENT(node))))
    442:                 {
    443:                     FPRINTF("\\left(");

# 1 0x00402D25 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (59):

     57:                                     }
     58: 
=>   59: OP_DEF('+', 2, "+", result = LEFT_COUNT + RIGHT_COUNT,
     60: 
     61:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 2 0x00402E25 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (109):

    107: 
    108: 
=>  109: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    110: 
    111:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 3 0x00402DA5 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (83):

     81: 
     82: 
=>   83: OP_DEF('-', 2, "-", result = LEFT_COUNT - RIGHT_COUNT,
     84: 
     85:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 4 0x00402EC4 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (145):

    143: 
    144: 
=>  145: OP_DEF('/', 1, "/", result = LEFT_COUNT / RIGHT_COUNT,
    146: 
    147:             Node* left_top_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 5 0x00402AA3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (407):

    405:                         $\n");
    406: 
=>  407:     leaf_print(tex_file, AST, ROOT(AST));
    408: 
    409:     fprintf(tex_file, "\n $ \n \\end{document}");

# 6 0x0041D529 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
=>   27:         AST_print(PRINTNAME, Counter);
     28: 
     29: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:40:09

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (8, 0x00): SIGFPE: Грубая ошибка в вычислениях. 

Недопустимая операция с плавающей точкой.

#1: Исключение EXCEPTION_FLT_INVALID_OPERATION (0xC0000090) при выполнении кода по адресу 0x00402BF0 в функции leaf_print() в файле C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp на строке 441. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x3F7C (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402BF0 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (441):

    439:         case OP:
    440:             {
=>  441:                 if (PARENT(node) && (OPER(PARENT(node)) != '/') && operation_priority(OPER(node)) > operation_priority(OPER(PARENT(node))))
    442:                 {
    443:                     FPRINTF("\\left(");

# 1 0x00402D25 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (59):

     57:                                     }
     58: 
=>   59: OP_DEF('+', 2, "+", result = LEFT_COUNT + RIGHT_COUNT,
     60: 
     61:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 2 0x00402E25 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (109):

    107: 
    108: 
=>  109: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    110: 
    111:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 3 0x00402DA5 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (83):

     81: 
     82: 
=>   83: OP_DEF('-', 2, "-", result = LEFT_COUNT - RIGHT_COUNT,
     84: 
     85:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 4 0x00402EC4 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (145):

    143: 
    144: 
=>  145: OP_DEF('/', 1, "/", result = LEFT_COUNT / RIGHT_COUNT,
    146: 
    147:             Node* left_top_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 5 0x00402AA3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (407):

    405:                         $\n");
    406: 
=>  407:     leaf_print(tex_file, AST, ROOT(AST));
    408: 
    409:     fprintf(tex_file, "\n $ \n \\end{document}");

# 6 0x0041D529 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
=>   27:         AST_print(PRINTNAME, Counter);
     28: 
     29: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:40:09

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Недопустимая операция с плавающей точкой.

#1: Исключение EXCEPTION_FLT_INVALID_OPERATION (0xC0000090) при выполнении кода по адресу 0x00402BF0 в функции leaf_print() в файле C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp на строке 441. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x3A58 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402BF0 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (441):

    439:         case OP:
    440:             {
=>  441:                 if (PARENT(node) && (OPER(PARENT(node)) != '/') && operation_priority(OPER(node)) > operation_priority(OPER(PARENT(node))))
    442:                 {
    443:                     FPRINTF("\\left(");

# 1 0x00402D25 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (59):

     57:                                     }
     58: 
=>   59: OP_DEF('+', 2, "+", result = LEFT_COUNT + RIGHT_COUNT,
     60: 
     61:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 2 0x00402E25 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (109):

    107: 
    108: 
=>  109: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    110: 
    111:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 3 0x00402DA5 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (83):

     81: 
     82: 
=>   83: OP_DEF('-', 2, "-", result = LEFT_COUNT - RIGHT_COUNT,
     84: 
     85:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 4 0x00402EC4 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (145):

    143: 
    144: 
=>  145: OP_DEF('/', 1, "/", result = LEFT_COUNT / RIGHT_COUNT,
    146: 
    147:             Node* left_top_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 5 0x00402AA3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (407):

    405:                         $\n");
    406: 
=>  407:     leaf_print(tex_file, AST, ROOT(AST));
    408: 
    409:     fprintf(tex_file, "\n $ \n \\end{document}");

# 6 0x0041D529 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
=>   27:         AST_print(PRINTNAME, Counter);
     28: 
     29: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:42:44

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (8, 0x00): SIGFPE: Грубая ошибка в вычислениях. 

Недопустимая операция с плавающей точкой.

#1: Исключение EXCEPTION_FLT_INVALID_OPERATION (0xC0000090) при выполнении кода по адресу 0x00402BF0 в функции leaf_print() в файле C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp на строке 441. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x3A58 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402BF0 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (441):

    439:         case OP:
    440:             {
=>  441:                 if (PARENT(node) && (OPER(PARENT(node)) != '/') && operation_priority(OPER(node)) > operation_priority(OPER(PARENT(node))))
    442:                 {
    443:                     FPRINTF("\\left(");

# 1 0x00402D25 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (59):

     57:                                     }
     58: 
=>   59: OP_DEF('+', 2, "+", result = LEFT_COUNT + RIGHT_COUNT,
     60: 
     61:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 2 0x00402E25 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (109):

    107: 
    108: 
=>  109: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    110: 
    111:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 3 0x00402DA5 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (83):

     81: 
     82: 
=>   83: OP_DEF('-', 2, "-", result = LEFT_COUNT - RIGHT_COUNT,
     84: 
     85:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 4 0x00402EC4 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (145):

    143: 
    144: 
=>  145: OP_DEF('/', 1, "/", result = LEFT_COUNT / RIGHT_COUNT,
    146: 
    147:             Node* left_top_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 5 0x00402AA3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (407):

    405:                         $\n");
    406: 
=>  407:     leaf_print(tex_file, AST, ROOT(AST));
    408: 
    409:     fprintf(tex_file, "\n $ \n \\end{document}");

# 6 0x0041D529 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
=>   27:         AST_print(PRINTNAME, Counter);
     28: 
     29: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:42:45

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Недопустимая операция с плавающей точкой.

#1: Исключение EXCEPTION_FLT_INVALID_OPERATION (0xC0000090) при выполнении кода по адресу 0x00402BEB в функции leaf_print() в файле C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp на строке 441. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x59E8 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402BEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (441):

    439:         case OP:
    440:             {
=>  441:                 if (PARENT(node) && (OPER(PARENT(node)) != '/'))
    442:                 {
    443:                     FPRINTF("\\left(");

# 1 0x00402CBD in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (59):

     57:                                     }
     58: 
=>   59: OP_DEF('+', 2, "+", result = LEFT_COUNT + RIGHT_COUNT,
     60: 
     61:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 2 0x00402DBD in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (109):

    107: 
    108: 
=>  109: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    110: 
    111:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 3 0x00402D3D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (83):

     81: 
     82: 
=>   83: OP_DEF('-', 2, "-", result = LEFT_COUNT - RIGHT_COUNT,
     84: 
     85:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 4 0x00402E5C in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (145):

    143: 
    144: 
=>  145: OP_DEF('/', 1, "/", result = LEFT_COUNT / RIGHT_COUNT,
    146: 
    147:             Node* left_top_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 5 0x00402AA3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (407):

    405:                         $\n");
    406: 
=>  407:     leaf_print(tex_file, AST, ROOT(AST));
    408: 
    409:     fprintf(tex_file, "\n $ \n \\end{document}");

# 6 0x0041D4C1 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
=>   27:         AST_print(PRINTNAME, Counter);
     28: 
     29: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:44:48

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (8, 0x00): SIGFPE: Грубая ошибка в вычислениях. 

Недопустимая операция с плавающей точкой.

#1: Исключение EXCEPTION_FLT_INVALID_OPERATION (0xC0000090) при выполнении кода по адресу 0x00402BEB в функции leaf_print() в файле C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp на строке 441. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x59E8 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402BEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (441):

    439:         case OP:
    440:             {
=>  441:                 if (PARENT(node) && (OPER(PARENT(node)) != '/'))
    442:                 {
    443:                     FPRINTF("\\left(");

# 1 0x00402CBD in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (59):

     57:                                     }
     58: 
=>   59: OP_DEF('+', 2, "+", result = LEFT_COUNT + RIGHT_COUNT,
     60: 
     61:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 2 0x00402DBD in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (109):

    107: 
    108: 
=>  109: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    110: 
    111:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 3 0x00402D3D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (83):

     81: 
     82: 
=>   83: OP_DEF('-', 2, "-", result = LEFT_COUNT - RIGHT_COUNT,
     84: 
     85:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 4 0x00402E5C in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (145):

    143: 
    144: 
=>  145: OP_DEF('/', 1, "/", result = LEFT_COUNT / RIGHT_COUNT,
    146: 
    147:             Node* left_top_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 5 0x00402AA3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (407):

    405:                         $\n");
    406: 
=>  407:     leaf_print(tex_file, AST, ROOT(AST));
    408: 
    409:     fprintf(tex_file, "\n $ \n \\end{document}");

# 6 0x0041D4C1 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
=>   27:         AST_print(PRINTNAME, Counter);
     28: 
     29: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:44:48

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Недопустимая операция с плавающей точкой.

#1: Исключение EXCEPTION_FLT_INVALID_OPERATION (0xC0000090) при выполнении кода по адресу 0x00402BEB в функции leaf_print() в файле C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp на строке 441. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x1A2C (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402BEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (441):

    439:         case OP:
    440:             {
=>  441:                 if (PARENT(node) && (OPER(PARENT(node)) != '/'))
    442:                 {
    443:                     FPRINTF("\\left(");

# 1 0x00402CBD in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (59):

     57:                                     }
     58: 
=>   59: OP_DEF('+', 2, "+", result = LEFT_COUNT + RIGHT_COUNT,
     60: 
     61:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 2 0x00402DBD in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (109):

    107: 
    108: 
=>  109: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    110: 
    111:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 3 0x00402D3D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (83):

     81: 
     82: 
=>   83: OP_DEF('-', 2, "-", result = LEFT_COUNT - RIGHT_COUNT,
     84: 
     85:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 4 0x00402E5C in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (145):

    143: 
    144: 
=>  145: OP_DEF('/', 1, "/", result = LEFT_COUNT / RIGHT_COUNT,
    146: 
    147:             Node* left_top_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 5 0x00402AA3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (407):

    405:                         $\n");
    406: 
=>  407:     leaf_print(tex_file, AST, ROOT(AST));
    408: 
    409:     fprintf(tex_file, "\n $ \n \\end{document}");

# 6 0x0041D4C1 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
=>   27:         AST_print(PRINTNAME, Counter);
     28: 
     29: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:45:32

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (8, 0x00): SIGFPE: Грубая ошибка в вычислениях. 

Недопустимая операция с плавающей точкой.

#1: Исключение EXCEPTION_FLT_INVALID_OPERATION (0xC0000090) при выполнении кода по адресу 0x00402BEB в функции leaf_print() в файле C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp на строке 441. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x1A2C (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402BEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (441):

    439:         case OP:
    440:             {
=>  441:                 if (PARENT(node) && (OPER(PARENT(node)) != '/'))
    442:                 {
    443:                     FPRINTF("\\left(");

# 1 0x00402CBD in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (59):

     57:                                     }
     58: 
=>   59: OP_DEF('+', 2, "+", result = LEFT_COUNT + RIGHT_COUNT,
     60: 
     61:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 2 0x00402DBD in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (109):

    107: 
    108: 
=>  109: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    110: 
    111:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 3 0x00402D3D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (83):

     81: 
     82: 
=>   83: OP_DEF('-', 2, "-", result = LEFT_COUNT - RIGHT_COUNT,
     84: 
     85:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 4 0x00402E5C in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (145):

    143: 
    144: 
=>  145: OP_DEF('/', 1, "/", result = LEFT_COUNT / RIGHT_COUNT,
    146: 
    147:             Node* left_top_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 5 0x00402AA3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (407):

    405:                         $\n");
    406: 
=>  407:     leaf_print(tex_file, AST, ROOT(AST));
    408: 
    409:     fprintf(tex_file, "\n $ \n \\end{document}");

# 6 0x0041D4C1 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
=>   27:         AST_print(PRINTNAME, Counter);
     28: 
     29: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:45:31

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Недопустимая операция с плавающей точкой.

#1: Исключение EXCEPTION_FLT_INVALID_OPERATION (0xC0000090) при выполнении кода по адресу 0x00402C2E в функции leaf_print() в файле C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp на строке 441. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x4490 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402C2E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (441):

    439:         case OP:
    440:             {
=>  441:                 if (PARENT(node) && (operation_priority(OPER(node)) > operation_priority(OPER(PARENT(node)))))
    442:                 {
    443:                     FPRINTF("\\left(");

# 1 0x00402CFF in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (59):

     57:                                     }
     58: 
=>   59: OP_DEF('+', 2, "+", result = LEFT_COUNT + RIGHT_COUNT,
     60: 
     61:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 2 0x00402DFF in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (109):

    107: 
    108: 
=>  109: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    110: 
    111:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 3 0x00402D7F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (83):

     81: 
     82: 
=>   83: OP_DEF('-', 2, "-", result = LEFT_COUNT - RIGHT_COUNT,
     84: 
     85:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 4 0x00402E9E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (145):

    143: 
    144: 
=>  145: OP_DEF('/', 1, "/", result = LEFT_COUNT / RIGHT_COUNT,
    146: 
    147:             Node* left_top_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 5 0x00402AA3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (407):

    405:                         $\n");
    406: 
=>  407:     leaf_print(tex_file, AST, ROOT(AST));
    408: 
    409:     fprintf(tex_file, "\n $ \n \\end{document}");

# 6 0x0041D505 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
=>   27:         AST_print(PRINTNAME, Counter);
     28: 
     29: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:47:43

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (8, 0x00): SIGFPE: Грубая ошибка в вычислениях. 

Недопустимая операция с плавающей точкой.

#1: Исключение EXCEPTION_FLT_INVALID_OPERATION (0xC0000090) при выполнении кода по адресу 0x00402C2E в функции leaf_print() в файле C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp на строке 441. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x4490 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402C2E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (441):

    439:         case OP:
    440:             {
=>  441:                 if (PARENT(node) && (operation_priority(OPER(node)) > operation_priority(OPER(PARENT(node)))))
    442:                 {
    443:                     FPRINTF("\\left(");

# 1 0x00402CFF in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (59):

     57:                                     }
     58: 
=>   59: OP_DEF('+', 2, "+", result = LEFT_COUNT + RIGHT_COUNT,
     60: 
     61:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 2 0x00402DFF in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (109):

    107: 
    108: 
=>  109: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    110: 
    111:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 3 0x00402D7F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (83):

     81: 
     82: 
=>   83: OP_DEF('-', 2, "-", result = LEFT_COUNT - RIGHT_COUNT,
     84: 
     85:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 4 0x00402E9E in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (145):

    143: 
    144: 
=>  145: OP_DEF('/', 1, "/", result = LEFT_COUNT / RIGHT_COUNT,
    146: 
    147:             Node* left_top_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 5 0x00402AA3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (407):

    405:                         $\n");
    406: 
=>  407:     leaf_print(tex_file, AST, ROOT(AST));
    408: 
    409:     fprintf(tex_file, "\n $ \n \\end{document}");

# 6 0x0041D505 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
=>   27:         AST_print(PRINTNAME, Counter);
     28: 
     29: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:47:44

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Недопустимая операция с плавающей точкой.

#1: Исключение EXCEPTION_FLT_INVALID_OPERATION (0xC0000090) при выполнении кода по адресу 0x00402BEB в функции leaf_print() в файле C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp на строке 443. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x1020 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402BEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (443):

    441:                 if (PARENT(node))
    442:                 {
=>  443:                     printf("%i", OPER(PARENT(node)));
    444:                     FPRINTF("\\left(");
    445:                     priority = 1;

# 1 0x00402CB0 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (59):

     57:                                     }
     58: 
=>   59: OP_DEF('+', 2, "+", result = LEFT_COUNT + RIGHT_COUNT,
     60: 
     61:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 2 0x00402DB0 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (109):

    107: 
    108: 
=>  109: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    110: 
    111:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 3 0x00402D30 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (83):

     81: 
     82: 
=>   83: OP_DEF('-', 2, "-", result = LEFT_COUNT - RIGHT_COUNT,
     84: 
     85:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 4 0x00402E4F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (145):

    143: 
    144: 
=>  145: OP_DEF('/', 1, "/", result = LEFT_COUNT / RIGHT_COUNT,
    146: 
    147:             Node* left_top_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 5 0x00402AA3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (407):

    405:                         $\n");
    406: 
=>  407:     leaf_print(tex_file, AST, ROOT(AST));
    408: 
    409:     fprintf(tex_file, "\n $ \n \\end{document}");

# 6 0x0041D4B5 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
=>   27:         AST_print(PRINTNAME, Counter);
     28: 
     29: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:49:19

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (8, 0x00): SIGFPE: Грубая ошибка в вычислениях. 

Недопустимая операция с плавающей точкой.

#1: Исключение EXCEPTION_FLT_INVALID_OPERATION (0xC0000090) при выполнении кода по адресу 0x00402BEB в функции leaf_print() в файле C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp на строке 443. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x1020 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402BEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (443):

    441:                 if (PARENT(node))
    442:                 {
=>  443:                     printf("%i", OPER(PARENT(node)));
    444:                     FPRINTF("\\left(");
    445:                     priority = 1;

# 1 0x00402CB0 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (59):

     57:                                     }
     58: 
=>   59: OP_DEF('+', 2, "+", result = LEFT_COUNT + RIGHT_COUNT,
     60: 
     61:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 2 0x00402DB0 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (109):

    107: 
    108: 
=>  109: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    110: 
    111:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 3 0x00402D30 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (83):

     81: 
     82: 
=>   83: OP_DEF('-', 2, "-", result = LEFT_COUNT - RIGHT_COUNT,
     84: 
     85:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 4 0x00402E4F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (145):

    143: 
    144: 
=>  145: OP_DEF('/', 1, "/", result = LEFT_COUNT / RIGHT_COUNT,
    146: 
    147:             Node* left_top_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 5 0x00402AA3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (407):

    405:                         $\n");
    406: 
=>  407:     leaf_print(tex_file, AST, ROOT(AST));
    408: 
    409:     fprintf(tex_file, "\n $ \n \\end{document}");

# 6 0x0041D4B5 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
=>   27:         AST_print(PRINTNAME, Counter);
     28: 
     29: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:31:19, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:49:20

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Недопустимая операция с плавающей точкой.

#1: Исключение EXCEPTION_FLT_INVALID_OPERATION (0xC0000090) при выполнении кода по адресу 0x00402BF0 в функции leaf_print() в файле C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp на строке 444. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x40DC (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402BF0 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (444):

    442:         case OP:
    443:             {
=>  444:                 if (PARENT(node) && (OPER(PARENT(node)) != '/') && (operation_priority(OPER(node)) > operation_priority(OPER(PARENT(node)))))
    445:                 {
    446:                     printf("%i\n", PARENT(node));

# 1 0x00402D3B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (55):

     53:                                     }
     54: 
=>   55: OP_DEF('+', 2, "+", result = LEFT_COUNT + RIGHT_COUNT,
     56: 
     57:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 2 0x00402E3B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (105):

    103: 
    104: 
=>  105: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    106: 
    107:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 3 0x00402DBB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (79):

     77: 
     78: 
=>   79: OP_DEF('-', 2, "-", result = LEFT_COUNT - RIGHT_COUNT,
     80: 
     81:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 4 0x00402EDA in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (141):

    139: 
    140: 
=>  141: OP_DEF('/', 1, "/", result = LEFT_COUNT / RIGHT_COUNT,
    142: 
    143:             Node* left_top_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 5 0x00402AA3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (407):

    405:                         $\n");
    406: 
=>  407:     leaf_print(tex_file, AST, ROOT(AST));
    408: 
    409:     fprintf(tex_file, "\n $ \n \\end{document}");

# 6 0x0041D51D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
=>   27:         AST_print(PRINTNAME, Counter);
     28: 
     29: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:50:28, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:53:30

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (8, 0x00): SIGFPE: Грубая ошибка в вычислениях. 

Недопустимая операция с плавающей точкой.

#1: Исключение EXCEPTION_FLT_INVALID_OPERATION (0xC0000090) при выполнении кода по адресу 0x00402BF0 в функции leaf_print() в файле C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp на строке 444. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x004FE2F0 (32-bit), Flags: Cmdre0, Thread: 0x40DC (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00402BF0 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (444):

    442:         case OP:
    443:             {
=>  444:                 if (PARENT(node) && (OPER(PARENT(node)) != '/') && (operation_priority(OPER(node)) > operation_priority(OPER(PARENT(node)))))
    445:                 {
    446:                     printf("%i\n", PARENT(node));

# 1 0x00402D3B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (55):

     53:                                     }
     54: 
=>   55: OP_DEF('+', 2, "+", result = LEFT_COUNT + RIGHT_COUNT,
     56: 
     57:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 2 0x00402E3B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (105):

    103: 
    104: 
=>  105: OP_DEF('*', 1, "*", result = LEFT_COUNT * RIGHT_COUNT,
    106: 
    107:             Node* left_part_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 3 0x00402DBB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (79):

     77: 
     78: 
=>   79: OP_DEF('-', 2, "-", result = LEFT_COUNT - RIGHT_COUNT,
     80: 
     81:             NEW_NODE(operate_branch_create(&ver_num_increase, node->info, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 4 0x00402EDA in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (141):

    139: 
    140: 
=>  141: OP_DEF('/', 1, "/", result = LEFT_COUNT / RIGHT_COUNT,
    142: 
    143:             Node* left_top_branch = MUL(DIF(LEFT(node)), COPY(RIGHT(node)));

# 5 0x00402AA3 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (407):

    405:                         $\n");
    406: 
=>  407:     leaf_print(tex_file, AST, ROOT(AST));
    408: 
    409:     fprintf(tex_file, "\n $ \n \\end{document}");

# 6 0x0041D51D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (27):

     25:         AST_simplify(Counter, ROOT(Counter));
     26:         //tree_save(Counter, SAVENAME);
=>   27:         AST_print(PRINTNAME, Counter);
     28: 
     29: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 12 2018 20:50:28, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 12 2018 20:53:30

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00404CD4 в функции leaf_print() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 362. Попытка прочесть данные по адресу 0x00000010. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x005022F0 (32-bit), Flags: Cmdre0, Thread: 0x5224 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00404CD4 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (362):

    360:                             }
    361: 
=>  362: OP_DEF(POW, 1, "^", pow(LEFT_COUNT, RIGHT_COUNT),
    363: 
    364:             Node* same =            COPY(node);

# 1 0x004046B4 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (173):

    171: 
    172: 
=>  173: OP_DEF(DIV, 2, "/", result = LEFT_COUNT / RIGHT_COUNT,
    174: 
    175:             Node* left_top_branch = OPERATE(MUL, DIF(LEFT(node)), COPY(RIGHT(node)));

# 2 0x00404586 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (94):

     92: 
     93: 
=>   94: OP_DEF(SUB, 3, "-", result = LEFT_COUNT - RIGHT_COUNT,
     95: 
     96:             NEW_NODE(OPERATE(SUB, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 3 0x0040433A in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (489):

    487:     tex_begin(tex_file);
    488: 
=>  489:     leaf_print(tex_file, AST, ROOT(AST));
    490: 
    491:     tex_end(tex_file);

# 4 0x0041FA02 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (29):

     27:         AST_simplify(Counter, ROOT(Counter));
     28:         tree_save(Counter, SAVENAME);
=>   29:         AST_print(PRINTNAME, Counter);
     30: 
     31:         tree_dump(dot, DUMPNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 19 2018 01:14:18, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 19 2018 01:39:27

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00404CD4 в функции leaf_print() в файле C:/Users/zue26/Documents/GitHub/Counter/Operators.h на строке 362. Попытка прочесть данные по адресу 0x00000010. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x005022F0 (32-bit), Flags: Cmdre0, Thread: 0x5224 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00404CD4 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (362):

    360:                             }
    361: 
=>  362: OP_DEF(POW, 1, "^", pow(LEFT_COUNT, RIGHT_COUNT),
    363: 
    364:             Node* same =            COPY(node);

# 1 0x004046B4 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (173):

    171: 
    172: 
=>  173: OP_DEF(DIV, 2, "/", result = LEFT_COUNT / RIGHT_COUNT,
    174: 
    175:             Node* left_top_branch = OPERATE(MUL, DIF(LEFT(node)), COPY(RIGHT(node)));

# 2 0x00404586 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: leaf_print() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (94):

     92: 
     93: 
=>   94: OP_DEF(SUB, 3, "-", result = LEFT_COUNT - RIGHT_COUNT,
     95: 
     96:             NEW_NODE(OPERATE(SUB, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 3 0x0040433A in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: AST_print() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (489):

    487:     tex_begin(tex_file);
    488: 
=>  489:     leaf_print(tex_file, AST, ROOT(AST));
    490: 
    491:     tex_end(tex_file);

# 4 0x0041FA02 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: main() at C:/Users/zue26/Documents/GitHub/Counter/main.cpp (29):

     27:         AST_simplify(Counter, ROOT(Counter));
     28:         tree_save(Counter, SAVENAME);
=>   29:         AST_print(PRINTNAME, Counter);
     30: 
     31:         tree_dump(dot, DUMPNAME, Counter);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 19 2018 01:14:18, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 19 2018 01:39:28

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x772D425D в функции RtlGetCurrentServiceSessionId(). Попытка прочесть данные по адресу 0x0111D748. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x005022F0 (32-bit), Flags: Cmdre0, Thread: 0x4A44, GetLastError(): 126 (Не найден указанный модуль). 

--------------------------------------------------
Стек вызовов:

# 0 0x772D425D in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetCurrentServiceSessionId()
# 1 0x772D3812 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlFreeHeap()
# 2 0x73F470B5 in C:\WINDOWS\System32\msvcrt.dll: free()
# 4 0x66283A18 in D:\TX\Windows\MgwHelp32.dll: EnumDirTree()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 19 2018 01:50:46, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 19 2018 01:50:49

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x772D625F в функции RtlAllocateHeap(). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x005012F0 (32-bit), Flags: Cmdre0, Thread: 0x5554 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x772D625F in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x772D5E2A in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x772D5D3E in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x73F47909 in C:\WINDOWS\System32\msvcrt.dll: realloc()
# 4 0x73F4701A in C:\WINDOWS\System32\msvcrt.dll: calloc()

# 5 0x00401C2B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (177):

    175:     const char* old_s = S;
    176: 
=>  177:     char* variable = (char*) calloc(MAX_VAR_LEN, sizeof(*variable));
    178: 
    179:     for (char* pos = variable; ((isalpha(*S) || CORRECT_CHAR_CHECK(S))&& S == old_s) || ((isalnum(*S) || CORRECT_CHAR_CHECK(S)) && S != old_s ); pos++, S++)

# 6 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

# 7 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 8 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

# 9 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#10 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#11 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#12 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#13 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#14 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#15 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#16 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#17 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#18 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#19 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#20 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#21 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#22 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#23 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#24 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#25 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#26 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#27 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#28 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#29 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#30 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#31 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#32 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#33 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#34 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#35 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#36 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#37 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#38 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#39 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#40 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#41 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#42 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#43 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#44 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#45 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#46 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#47 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#48 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#49 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#50 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#51 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#52 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#53 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#54 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#55 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#56 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#57 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#58 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#59 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#60 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#61 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 19 2018 02:12:10, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 19 2018 02:12:14

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x772D625F в функции RtlAllocateHeap(). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x005012F0 (32-bit), Flags: Cmdre0, Thread: 0x5554 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x772D625F in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x772D5E2A in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x772D5D3E in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x73F47909 in C:\WINDOWS\System32\msvcrt.dll: realloc()
# 4 0x73F4701A in C:\WINDOWS\System32\msvcrt.dll: calloc()

# 5 0x00401C2B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (177):

    175:     const char* old_s = S;
    176: 
=>  177:     char* variable = (char*) calloc(MAX_VAR_LEN, sizeof(*variable));
    178: 
    179:     for (char* pos = variable; ((isalpha(*S) || CORRECT_CHAR_CHECK(S))&& S == old_s) || ((isalnum(*S) || CORRECT_CHAR_CHECK(S)) && S != old_s ); pos++, S++)

# 6 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

# 7 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 8 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

# 9 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#10 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#11 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#12 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#13 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#14 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#15 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#16 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#17 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#18 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#19 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#20 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#21 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#22 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#23 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#24 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#25 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#26 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#27 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#28 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#29 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#30 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#31 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#32 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#33 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#34 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#35 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#36 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#37 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#38 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#39 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#40 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#41 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#42 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#43 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#44 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#45 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#46 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#47 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#48 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#49 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#50 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#51 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#52 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#53 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#54 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#55 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#56 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#57 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#58 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#59 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#60 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#61 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 19 2018 02:12:10, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 19 2018 02:12:14

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x772D625F в функции RtlAllocateHeap(). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x005012F0 (32-bit), Flags: Cmdre0, Thread: 0x6B34 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x772D625F in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x772D5E2A in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x772D5D3E in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x73F47909 in C:\WINDOWS\System32\msvcrt.dll: realloc()
# 4 0x73F4701A in C:\WINDOWS\System32\msvcrt.dll: calloc()

# 5 0x00401C2B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (177):

    175:     const char* old_s = S;
    176: 
=>  177:     char* variable = (char*) calloc(MAX_VAR_LEN, sizeof(*variable));
    178: 
    179:     for (char* pos = variable; ((isalpha(*S) || CORRECT_CHAR_CHECK(S))&& S == old_s) || ((isalnum(*S) || CORRECT_CHAR_CHECK(S)) && S != old_s ); pos++, S++)

# 6 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

# 7 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 8 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

# 9 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#10 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#11 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#12 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#13 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#14 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#15 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#16 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#17 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#18 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#19 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#20 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#21 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#22 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#23 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#24 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#25 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#26 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#27 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#28 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#29 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#30 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#31 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#32 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#33 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#34 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#35 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#36 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#37 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#38 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#39 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#40 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#41 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#42 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#43 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#44 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#45 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#46 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#47 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#48 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#49 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#50 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#51 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#52 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#53 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#54 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#55 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#56 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#57 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#58 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#59 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#60 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#61 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 19 2018 02:12:10, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 19 2018 02:12:46

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x772D625F в функции RtlAllocateHeap(). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x005012F0 (32-bit), Flags: Cmdre0, Thread: 0xE28 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x772D625F in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x772D5E2A in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x772D5D3E in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x73F47909 in C:\WINDOWS\System32\msvcrt.dll: realloc()
# 4 0x73F4701A in C:\WINDOWS\System32\msvcrt.dll: calloc()

# 5 0x00401C2B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (177):

    175:     const char* old_s = S;
    176: 
=>  177:     char* variable = (char*) calloc(MAX_VAR_LEN, sizeof(*variable));
    178: 
    179:     for (char* pos = variable; ((isalpha(*S) || CORRECT_CHAR_CHECK(S))&& S == old_s) || ((isalnum(*S) || CORRECT_CHAR_CHECK(S)) && S != old_s ); pos++, S++)

# 6 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

# 7 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 8 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

# 9 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#10 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#11 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#12 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#13 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#14 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#15 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#16 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#17 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#18 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#19 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#20 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#21 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#22 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#23 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#24 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#25 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#26 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#27 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#28 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#29 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#30 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#31 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#32 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#33 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#34 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#35 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#36 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#37 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#38 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#39 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#40 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#41 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#42 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#43 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#44 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#45 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#46 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#47 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#48 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#49 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#50 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#51 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#52 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#53 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#54 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#55 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#56 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#57 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#58 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#59 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#60 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#61 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 19 2018 02:12:56, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 19 2018 02:13:00

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x772D625F в функции RtlAllocateHeap(). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x005012F0 (32-bit), Flags: Cmdre0, Thread: 0x88F8 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x772D625F in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x772D5E2A in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x772D5D3E in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x73F47909 in C:\WINDOWS\System32\msvcrt.dll: realloc()
# 4 0x73F4701A in C:\WINDOWS\System32\msvcrt.dll: calloc()

# 5 0x00401C2B in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (177):

    175:     const char* old_s = S;
    176: 
=>  177:     char* variable = (char*) calloc(MAX_VAR_LEN, sizeof(*variable));
    178: 
    179:     for (char* pos = variable; ((isalpha(*S) || CORRECT_CHAR_CHECK(S))&& S == old_s) || ((isalnum(*S) || CORRECT_CHAR_CHECK(S)) && S != old_s ); pos++, S++)

# 6 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

# 7 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 8 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

# 9 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#10 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#11 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#12 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#13 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#14 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#15 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#16 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#17 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#18 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#19 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#20 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#21 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#22 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#23 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#24 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#25 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#26 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#27 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#28 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#29 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#30 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#31 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#32 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#33 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#34 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#35 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#36 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#37 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#38 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#39 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#40 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#41 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#42 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#43 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#44 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#45 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#46 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#47 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#48 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#49 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#50 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#51 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#52 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#53 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#54 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#55 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#56 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#57 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#58 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#59 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#60 0x00401B1D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#61 0x00401D84 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 19 2018 02:13:33, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 19 2018 02:13:37

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x772D5F68 в функции RtlAllocateHeap(). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x005012F0 (32-bit), Flags: Cmdre0, Thread: 0x7FF0 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x772D5F68 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x772D5E2A in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x772D5D3E in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x73F47909 in C:\WINDOWS\System32\msvcrt.dll: realloc()
# 4 0x73F4701A in C:\WINDOWS\System32\msvcrt.dll: calloc()

# 5 0x00401C4D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (177):

    175:     const char* old_s = S;
    176: 
=>  177:     char* variable = (char*) calloc(MAX_VAR_LEN, sizeof(*variable));
    178: 
    179:     for (char* pos = variable; ((isalpha(*S) || CORRECT_CHAR_CHECK(S))&& S == old_s) || ((isalnum(*S) || CORRECT_CHAR_CHECK(S)) && S != old_s ); pos++, S++)

# 6 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

# 7 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 8 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

# 9 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#10 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#11 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#12 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#13 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#14 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#15 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#16 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#17 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#18 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#19 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#20 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#21 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#22 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#23 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#24 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#25 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#26 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#27 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#28 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#29 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#30 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#31 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#32 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#33 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#34 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#35 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#36 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#37 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#38 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#39 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#40 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#41 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#42 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#43 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#44 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#45 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#46 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#47 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#48 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#49 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#50 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#51 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#52 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#53 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#54 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#55 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#56 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#57 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#58 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#59 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#60 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#61 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 19 2018 02:18:05, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 19 2018 02:18:09

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x772D5F68 в функции RtlAllocateHeap(). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x005012F0 (32-bit), Flags: Cmdre0, Thread: 0x7FF0 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x772D5F68 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x772D5E2A in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x772D5D3E in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x73F47909 in C:\WINDOWS\System32\msvcrt.dll: realloc()
# 4 0x73F4701A in C:\WINDOWS\System32\msvcrt.dll: calloc()

# 5 0x00401C4D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (177):

    175:     const char* old_s = S;
    176: 
=>  177:     char* variable = (char*) calloc(MAX_VAR_LEN, sizeof(*variable));
    178: 
    179:     for (char* pos = variable; ((isalpha(*S) || CORRECT_CHAR_CHECK(S))&& S == old_s) || ((isalnum(*S) || CORRECT_CHAR_CHECK(S)) && S != old_s ); pos++, S++)

# 6 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

# 7 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 8 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

# 9 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#10 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#11 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#12 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#13 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#14 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#15 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#16 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#17 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#18 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#19 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#20 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#21 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#22 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#23 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#24 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#25 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#26 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#27 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#28 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#29 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#30 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#31 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#32 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#33 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#34 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#35 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#36 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#37 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#38 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#39 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#40 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#41 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#42 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#43 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#44 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#45 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#46 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#47 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#48 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#49 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#50 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#51 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#52 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#53 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#54 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#55 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#56 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#57 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#58 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#59 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#60 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#61 0x00401DA6 in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 19 2018 02:18:05, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 19 2018 02:18:09

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x772D5F68 в функции RtlAllocateHeap(). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x005012F0 (32-bit), Flags: Cmdre0, Thread: 0x348C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x772D5F68 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x772D5E2A in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x772D5D3E in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x73F47909 in C:\WINDOWS\System32\msvcrt.dll: realloc()
# 4 0x73F4701A in C:\WINDOWS\System32\msvcrt.dll: calloc()

# 5 0x00401C4D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (177):

    175:     const char* old_s = S;
    176: 
=>  177:     char* variable = (char*) calloc(MAX_VAR_LEN, sizeof(*variable));
    178: 
    179:     for (char* pos = variable; ((isalpha(*S) || CORRECT_CHAR_CHECK(S))&& S == old_s) || ((isalnum(*S) || CORRECT_CHAR_CHECK(S)) && S != old_s ); pos++, S++)

# 6 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

# 7 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 8 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

# 9 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#10 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#11 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#12 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#13 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#14 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#15 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#16 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#17 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#18 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#19 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#20 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#21 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#22 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#23 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#24 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#25 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#26 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#27 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#28 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#29 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#30 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#31 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#32 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#33 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#34 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#35 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#36 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#37 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#38 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#39 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#40 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#41 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#42 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#43 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#44 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#45 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#46 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#47 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#48 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#49 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#50 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#51 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#52 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#53 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#54 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#55 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#56 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#57 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#58 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#59 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#60 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#61 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 19 2018 02:18:05, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 19 2018 02:19:04

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x772D5F68 в функции RtlAllocateHeap(). Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300], Instance: 0x005012F0 (32-bit), Flags: Cmdre0, Thread: 0x348C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x772D5F68 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 1 0x772D5E2A in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 2 0x772D5D3E in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlAllocateHeap()
# 3 0x73F47909 in C:\WINDOWS\System32\msvcrt.dll: realloc()
# 4 0x73F4701A in C:\WINDOWS\System32\msvcrt.dll: calloc()

# 5 0x00401C4D in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (177):

    175:     const char* old_s = S;
    176: 
=>  177:     char* variable = (char*) calloc(MAX_VAR_LEN, sizeof(*variable));
    178: 
    179:     for (char* pos = variable; ((isalpha(*S) || CORRECT_CHAR_CHECK(S))&& S == old_s) || ((isalnum(*S) || CORRECT_CHAR_CHECK(S)) && S != old_s ); pos++, S++)

# 6 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

# 7 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

# 8 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

# 9 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#10 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#11 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#12 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#13 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#14 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#15 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#16 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#17 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#18 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#19 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#20 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#21 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#22 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#23 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#24 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#25 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#26 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#27 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#28 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#29 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#30 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#31 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#32 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#33 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#34 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#35 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#36 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#37 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#38 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#39 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#40 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#41 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#42 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#43 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#44 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#45 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#46 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#47 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#48 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#49 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#50 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#51 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#52 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#53 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#54 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#55 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#56 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#57 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#58 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#59 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

#60 0x00401B3F in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_P() at C:/Users/zue26/Documents/GitHub/Counter/Counter.cpp (145):

    143:     else
    144:     {
=>  145:         return get_Id(AST);
    146:     }
    147: }

#61 0x00401DEB in C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe: get_Id() at C:/Users/zue26/Documents/GitHub/Counter/Operators.h (61):

     59: #define EQUAL_CHILDREN              branch_compare(RIGHT(node), LEFT(node))
     60: 
=>   61: OP_DEF(SUM, 3, "+", result = LEFT_COUNT + RIGHT_COUNT,
     62: 
     63:             NEW_NODE(OPERATE(SUM, DIF(LEFT(node)), DIF(RIGHT(node))));,

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-06-12 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	D:\TX\TXlib.h
Compiled:	Dec 19 2018 02:18:05, GNU g++ 5.1.0, std=199711L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Dec 19 2018 02:19:04

Run file:	C:\Users\zue26\Documents\GitHub\Counter\bin\Debug\Counter.exe
Directory:	C:\Users\zue26\Documents\GitHub\Counter

--------------------------------------------------
